/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/animate.js":
/*!************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/animate.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Animations */ \n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/animate.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/app.js":
/*!********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/app.js ***!
  \********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polyfill */ \"./node_modules/@helsingborg-stad/styleguide/source/js/polyfill.js\");\n/* harmony import */ var _polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_polyfill__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _expand_section__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expand-section */ \"./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js\");\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter */ \"./node_modules/@helsingborg-stad/styleguide/source/js/filter.js\");\n/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sort */ \"./node_modules/@helsingborg-stad/styleguide/source/js/sort.js\");\n/* harmony import */ var _toggle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toggle */ \"./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js\");\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./menu */ \"./node_modules/@helsingborg-stad/styleguide/source/js/menu.js\");\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modal */ \"./node_modules/@helsingborg-stad/styleguide/source/js/modal.js\");\n/* harmony import */ var _steppers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./steppers */ \"./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js\");\n/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./image */ \"./node_modules/@helsingborg-stad/styleguide/source/js/image.js\");\n/* harmony import */ var _splitButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./splitButton */ \"./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js\");\n/* harmony import */ var _dropdown__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dropdown */ \"./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js\");\n/* harmony import */ var _fields__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fields */ \"./node_modules/@helsingborg-stad/styleguide/source/js/fields.js\");\n/* harmony import */ var _slider__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./slider */ \"./node_modules/@helsingborg-stad/styleguide/source/js/slider.js\");\n/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./calendar */ \"./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js\");\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./tile */ \"./node_modules/@helsingborg-stad/styleguide/source/js/tile.js\");\n/* harmony import */ var _notification__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./notification */ \"./node_modules/@helsingborg-stad/styleguide/source/js/notification.js\");\n/* harmony import */ var _notificationDoc__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./notificationDoc */ \"./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js\");\n/* harmony import */ var _initBuild__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./initBuild */ \"./node_modules/@helsingborg-stad/styleguide/source/js/initBuild.js\");\n/* harmony import */ var _sidebar__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sidebar */ \"./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js\");\n/* harmony import */ var _datepicker__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./datepicker */ \"./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObject(_expand_section__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n\nlet SortInstance = new _sort__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\nlet ToggleInstance = new _toggle__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\nlet SplitButtonInstance = new _splitButton__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\nlet DropdownInstance = new _dropdown__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\nlet SliderInstance = new _slider__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\nlet EventCalendarInstance = new _calendar__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\nlet TilesInstance = new _tile__WEBPACK_IMPORTED_MODULE_14__[\"default\"];\nconst NotificationInstance = new _notification__WEBPACK_IMPORTED_MODULE_15__[\"default\"];\nconst NotificationDocInstance = new _notificationDoc__WEBPACK_IMPORTED_MODULE_16__[\"default\"];\nlet SidebarInstance = new _sidebar__WEBPACK_IMPORTED_MODULE_18__[\"default\"];\n\nSortInstance.applySort();\nToggleInstance.applyToggle();\nDropdownInstance.setValidTargets();\nSplitButtonInstance.syncSplitButton();\nSliderInstance.applySliders();\nEventCalendarInstance.initiateCalendar();\nTilesInstance.initTiles();\nNotificationDocInstance.addListener();\nNotificationInstance.setup();\nSidebarInstance.applySidebar();\n\nlet filter = new _filter__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n// Modal\nlet ModalInstance = new _modal__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\nModalInstance.enableModals();\n\n// Steppers\nlet SteppersInstance = new _steppers__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\nSteppersInstance.enableStepper();\n\n//Menu\nlet MenuInstance = new _menu__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n\nconst FieldsInstance = new _fields__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n\n\n\n// SCSS/CSS Compiler\nnew _initBuild__WEBPACK_IMPORTED_MODULE_17__[\"default\"]();\n\n\n\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/app.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js ***!
  \****************************************************************************************/
/*! exports provided: Calendar, Organizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Calendar\", function() { return Calendar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Organizer\", function() { return Organizer; });\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal */ \"./node_modules/@helsingborg-stad/styleguide/source/js/modal.js\");\n\r\n\r\n\r\n\r\nfunction Calendar(id, size, labelSettings, colors, options) {\r\n    this.id = id;\r\n    this.size = size;\r\n    this.labelSettings = labelSettings;\r\n    this.colors = colors;\r\n\r\n    this.initday = 0;\r\n\r\n    options = options || {};\r\n\r\n    this.indicator = true;\r\n    if (options.indicator != undefined) this.indicator = options.indicator;\r\n\r\n    this.indicator_type = 1;\r\n    if (options.indicator_type != undefined) this.indicator_type = options.indicator_type;\r\n\r\n    this.indicator_pos  = (this.indicator_type == 1) ? \"bottom\" : \"top\";\r\n    if (options.indicator_pos != undefined) this.indicator_pos = options.indicator_pos;\r\n\r\n    var listPlaceholder = document.createElement(\"LI\");\r\n    listPlaceholder.className = \"cjslib-list-placeholder\";\r\n    listPlaceholder.appendChild(document.createTextNode(\"No events on this day\"));\r\n    listPlaceholder.style = \"text-align: center; padding: 20px 0px;\";\r\n    \r\n    this.placeholder = listPlaceholder.outerHTML;\r\n    if (options.placeholder != undefined) this.placeholder = options.placeholder;\r\n\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    if (options.months != undefined && options.months.length == 12) months = options.months;\r\n\r\n    var label = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    if (options.days != undefined && options.days.length == 7) label = options.days;\r\n\r\n    this.months = months;\r\n    this.defaultLabels = label;\r\n\r\n    this.label = [];\r\n    this.labels = [];\r\n    for (var i = 0; i < 7; i++) {\r\n        this.label.push(label[label.indexOf(labelSettings[0]) + this.label.length >= label.length ? Math.abs(label.length - (label.indexOf(labelSettings[0]) + this.label.length)) : label.indexOf(labelSettings[0]) + this.label.length]);\r\n    }\r\n    for (var i = 0; i < 7; i++) {\r\n        this.labels.push(this.label[i].substring(0, labelSettings[1] > 3 ? 3 : labelSettings[1]));\r\n    }\r\n\r\n    this.date = new Date();\r\n    this.today = new Date();\r\n\r\n    this.history = [];\r\n\r\n    this.draw();\r\n    this.update();\r\n\r\n    this.setOnClickListener('days-blocks');\r\n    this.setOnClickListener('month-slider');\r\n    this.setOnClickListener('year-slider');\r\n}\r\n\r\nCalendar.prototype = {\r\n    constructor: Calendar,\r\n    back: function back(func) {\r\n        var date = this.date;\r\n        var lastDay = new Date(date.getMonth() + 1 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 1 > 12 ? 0 : date.getMonth() + 1, 0).getDate();\r\n        var previousLastDay = new Date(date.getMonth() < 0 ? date.getFullYear() - 1 : date.getFullYear(), date.getMonth() < 0 ? 11 : date.getMonth(), 0).getDate();\r\n\r\n        if (func == \"month\") {\r\n            if (date.getDate() > previousLastDay) {\r\n                this.changeDateTo(previousLastDay);\r\n            }\r\n            if (date.getMonth() > 0) date.setMonth(date.getMonth() - 1);else {\r\n                date.setMonth(11);\r\n                date.setFullYear(date.getFullYear() - 1);\r\n            }\r\n        } else if (func == \"year\") date.setFullYear(date.getFullYear() - 1);\r\n\r\n        this.update();\r\n    },\r\n    next: function next(func) {\r\n        var date = this.date;\r\n        var lastDay = new Date(date.getMonth() + 1 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 1 > 12 ? 0 : date.getMonth() + 1, 0).getDate();\r\n        var soonLastDay = new Date(date.getMonth() + 2 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 2 > 12 ? 0 : date.getMonth() + 2, 0).getDate();\r\n\r\n        if (func == \"month\") {\r\n            if (date.getDate() > soonLastDay) {\r\n                this.changeDateTo(soonLastDay);\r\n            }\r\n            if (date.getMonth() != 11) date.setMonth(date.getMonth() + 1);else {\r\n                date.setMonth(0);\r\n                date.setFullYear(date.getFullYear() + 1);\r\n            }\r\n        } else date.setFullYear(date.getFullYear() + 1);\r\n\r\n        this.update();\r\n    },\r\n    changeDateTo: function changeDateTo(theDay, theBlock) {\r\n        if (theBlock >= 31 && theDay <= 11 || theBlock <= 6 && theDay >= 8) {\r\n            if (theBlock >= 31 && theDay <= 11) this.next('month');else if (theBlock <= 6 && theDay >= 8) this.back('month');\r\n\r\n            this.date.setDate(theDay);\r\n\r\n            var calendarInstance = this;\r\n            setTimeout(function () {\r\n                calendarInstance.update();\r\n            }, 1);\r\n\r\n            return true;\r\n        } else this.date.setDate(theDay);\r\n    },\r\n    getDateString: function getDateString() {\r\n        return this.months[this.date.getMonth()] + \" \" + this.date.getDate() + \", \" + this.date.getFullYear();\r\n    }\r\n};\r\n\r\nCalendar.prototype.draw = function () {\r\n    var backSvg = '<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"' + this.colors[3] + '\" d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\"></path></svg>';\r\n    var nextSvg = '<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"' + this.colors[3] + '\" d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\"></path></svg>';\r\n\r\n    var theCalendar = document.createElement(\"DIV\");\r\n    theCalendar.className = \"cjslib-calendar cjslib-size-\" + this.size;\r\n\r\n    //document.getElementById(this.id).appendChild(theCalendar.cloneNode(true));\r\n\r\n    var theContainers = [],\r\n        theNames = ['year', 'month', 'labels', 'days'];\r\n    for (var i = 0; i < theNames.length; i++) {\r\n        theContainers[i] = document.createElement(\"DIV\");\r\n        theContainers[i].className = \"cjslib-\" + theNames[i];\r\n\r\n        if (theNames[i] != \"days\") {\r\n            if (theNames[i] != \"month\") {\r\n                theContainers[i].style.backgroundColor = this.colors[1];\r\n                theContainers[i].style.color = this.colors[3];\r\n\r\n                if (theNames[i] != \"labels\") {\r\n                    var backSlider = document.createElement(\"DIV\");\r\n                    backSlider.id = this.id + \"-year-back\";\r\n                    backSlider.insertAdjacentHTML('beforeend', backSvg);\r\n                    theContainers[i].appendChild(backSlider.cloneNode(true));\r\n\r\n                    var theText = document.createElement(\"SPAN\");\r\n                    theText.id = this.id + \"-\" + theNames[i];\r\n                    theContainers[i].appendChild(theText.cloneNode(true));\r\n\r\n                    var nextSlider = document.createElement(\"DIV\");\r\n                    nextSlider.id = this.id + \"-year-next\";\r\n                    nextSlider.insertAdjacentHTML('beforeend', nextSvg);\r\n                    theContainers[i].appendChild(nextSlider.cloneNode(true));\r\n                }\r\n            } else {\r\n                theContainers[i].style.backgroundColor = this.colors[0];\r\n                theContainers[i].style.color = this.colors[2];\r\n\r\n                var backSlider = document.createElement(\"DIV\");\r\n                backSlider.id = this.id + \"-month-back\";\r\n                backSlider.insertAdjacentHTML('beforeend', backSvg);\r\n                theContainers[i].appendChild(backSlider.cloneNode(true));\r\n\r\n                var theText = document.createElement(\"SPAN\");\r\n                theText.id = this.id + \"-\" + theNames[i];\r\n                theContainers[i].appendChild(theText.cloneNode(true));\r\n\r\n                var nextSlider = document.createElement(\"DIV\");\r\n                nextSlider.id = this.id + \"-month-next\";\r\n                nextSlider.insertAdjacentHTML('beforeend', nextSvg);\r\n                theContainers[i].appendChild(nextSlider.cloneNode(true));\r\n            }\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < this.labels.length; i++) {\r\n        var theLabel = document.createElement(\"SPAN\");\r\n        theLabel.id = this.id + \"-label-\" + (i + 1);\r\n        theLabel.appendChild(document.createTextNode(this.labels[i]).cloneNode(true));\r\n\r\n        theContainers[2].appendChild(theLabel.cloneNode(true));\r\n    }\r\n\r\n    var theRows = [],\r\n        theDays = [],\r\n        theRadios = [];\r\n    for (var i = 0; i < 6; i++) {\r\n        theRows[i] = document.createElement(\"DIV\");\r\n        theRows[i].className = \"cjslib-row\";\r\n    }\r\n\r\n    for (var i = 0, j = 0; i < 42; i++) {\r\n        theRadios[i] = document.createElement(\"INPUT\");\r\n        theRadios[i].className = \"cjslib-day-radios\";\r\n        theRadios[i].type = \"button\";\r\n        theRadios[i].name = this.id + \"-day-radios\";\r\n        theRadios[i].id = this.id + \"-day-radio-\" + (i + 1);\r\n        theRadios[i].setAttribute('data-open','examplemodalid');\r\n\r\n        theDays[i] = document.createElement(\"LABEL\");\r\n        theDays[i].className = \"cjslib-day\";\r\n        theDays[i].htmlFor = this.id + \"-day-radio-\" + (i + 1);\r\n        theDays[i].id = this.id + \"-day-\" + (i + 1);\r\n        theDays[i].setAttribute('data-open','examplemodalid');\r\n\r\n        var theText = document.createElement(\"SPAN\");\r\n        theText.className = \"cjslib-day-num\";\r\n        theText.id = this.id + \"-day-num-\" + (i + 1);\r\n\r\n        theDays[i].appendChild(theText.cloneNode(true));\r\n\r\n        if (this.indicator) {\r\n            var theIndicator = document.createElement(\"SPAN\");\r\n            theIndicator.className = \"cjslib-day-indicator cjslib-indicator-pos-\" + this.indicator_pos;\r\n                if (this.indicator_type == 1) theIndicator.className += \" cjslib-indicator-type-numeric\";\r\n            theIndicator.id = this.id + \"-day-indicator-\" + (i + 1);\r\n\r\n            theDays[i].appendChild(theIndicator.cloneNode(true));\r\n        }\r\n\r\n        theRows[j].appendChild(theRadios[i].cloneNode(true));\r\n        theRows[j].appendChild(theDays[i].cloneNode(true));\r\n\r\n        if ((i + 1) % 7 == 0) {\r\n            j++;\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < 6; i++) {\r\n        theContainers[3].appendChild(theRows[i].cloneNode(true));\r\n    }\r\n\r\n    for (var i = 0; i < theContainers.length; i++) {\r\n        theCalendar.appendChild(theContainers[i].cloneNode(true));\r\n    }\r\n\r\n    document.getElementById(this.id).innerHTML = \"<style>.cjslib-day-indicator { color: \" + this.colors[1] + \"; background-color: \" + this.colors[1] + \"; } .cjslib-indicator-type-numeric { color: \" + this.colors[2] + \"; } .cjslib-day.cjslib-day-today > .cjslib-day-num { border-color: \" + this.colors[1] + \" !important; }</style>\";\r\n    document.getElementById(this.id).appendChild(theCalendar.cloneNode(true));\r\n};\r\n\r\nCalendar.prototype.update = function () {\r\n    document.getElementById(this.id + '-year').innerHTML = this.date.getFullYear();\r\n    document.getElementById(this.id + '-month').innerHTML = this.months[this.date.getMonth()];\r\n\r\n    for (var i = 1; i <= 42; i++) {\r\n        document.getElementById(this.id + '-day-num-' + i).innerHTML = \"\";\r\n        document.getElementById(this.id + '-day-' + i).className = this.id + \" cjslib-day cjslib-day-listed\";\r\n    }\r\n\r\n    var firstDay = new Date(this.date.getFullYear(), this.date.getMonth(), 1).getDay();\r\n    var lastDay = new Date(this.date.getMonth() + 1 > 11 ? this.date.getFullYear() + 1 : this.date.getFullYear(), this.date.getMonth() + 1 > 12 ? 0 : this.date.getMonth() + 1, 0).getDate();\r\n\r\n    var previousLastDay = new Date(this.date.getMonth() < 0 ? this.date.getFullYear() - 1 : this.date.getFullYear(), this.date.getMonth() < 0 ? 11 : this.date.getMonth(), 0).getDate();\r\n\r\n    this.initday = this.label.indexOf(this.defaultLabels[firstDay]);\r\n\r\n    var firstDayLabel = this.defaultLabels[firstDay];\r\n    var firstDayLabelPos = this.label.indexOf(firstDayLabel);\r\n\r\n    for (var i = 0, j = previousLastDay; i < firstDayLabelPos; i++, j--) {\r\n        document.getElementById(this.id + '-day-num-' + (firstDayLabelPos - i)).innerHTML = j;\r\n        document.getElementById(this.id + '-day-' + (firstDayLabelPos - i)).className = this.id + \" cjslib-day cjslib-day-diluted\";\r\n    }\r\n\r\n    for (var i = 1; i <= lastDay; i++) {\r\n        document.getElementById(this.id + '-day-num-' + (firstDayLabelPos + i)).innerHTML = i;\r\n\r\n        if (i == this.date.getDate()) document.getElementById(this.id + '-day-radio-' + (firstDayLabelPos + i)).checked = true;\r\n\r\n        if (this.date.getMonth() == this.today.getMonth())\r\n            if (i == this.today.getDate()) document.getElementById(this.id + '-day-' + (firstDayLabelPos + i)).className += \" cjslib-day-today\";\r\n    }\r\n\r\n    for (var i = lastDay + 1, j = 1; firstDayLabelPos + i <= 42; i++, j++) {\r\n        document.getElementById(this.id + '-day-num-' + (firstDayLabelPos + i)).innerHTML = j;\r\n        document.getElementById(this.id + '-day-' + (firstDayLabelPos + i)).className = this.id + \" cjslib-day cjslib-day-diluted\";\r\n    }\r\n};\r\n\r\nCalendar.prototype.setupBlock = function (blockId, calendarInstance, callback) {\r\n    document.getElementById(calendarInstance.id + \"-day-\" + blockId).onclick = function () {\r\n        if (document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML.length > 0) {\r\n            calendarInstance.changeDateTo(document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML, blockId);\r\n            callback();\r\n        }\r\n    };\r\n};\r\n\r\nCalendar.prototype.setOnClickListener = function (theCase, backCallback, nextCallback) {\r\n    var calendarId = this.id;\r\n\r\n    backCallback = backCallback || function () {};\r\n    nextCallback = nextCallback || function () {};\r\n\r\n    var calendarInstance = this;\r\n\r\n    switch (theCase) {\r\n        case \"days-blocks\":\r\n            for (var i = 1; i <= 42; i++) {\r\n                calendarInstance.setupBlock(i, calendarInstance, backCallback);\r\n            }\r\n            break;\r\n        case \"month-slider\":\r\n            document.getElementById(calendarId + \"-month-back\").onclick = function () {\r\n                calendarInstance.back('month');\r\n                backCallback();\r\n            };\r\n            document.getElementById(calendarId + \"-month-next\").onclick = function () {\r\n                calendarInstance.next('month');\r\n                nextCallback();\r\n            };\r\n            break;\r\n        case \"year-slider\":\r\n            document.getElementById(calendarId + \"-year-back\").onclick = function () {\r\n                calendarInstance.back('year');\r\n                backCallback();\r\n            };\r\n            document.getElementById(calendarId + \"-year-next\").onclick = function () {\r\n                calendarInstance.next('year');\r\n                nextCallback();\r\n            };\r\n            break;\r\n    }\r\n};\r\n\r\nfunction Organizer(id, calendar, data) {\r\n    this.id = id;\r\n    this.calendar = calendar;\r\n\r\n    this.data = data || {};\r\n\r\n    this.draw();\r\n\r\n    var organizerInstance = this;\r\n    organizerInstance.onMonthChange(function () {\r\n        organizerInstance.indicateEvents();\r\n    });\r\n\r\n    this.setOnClickListener('days-blocks');\r\n    this.setOnClickListener('day-slider');\r\n    this.setOnClickListener('month-slider');\r\n    this.setOnClickListener('year-slider');\r\n\r\n    this.setOnLongClickListener('days-blocks');\r\n}\r\n\r\nOrganizer.prototype = {\r\n    constructor: Organizer,\r\n    back: function back(func) {\r\n        var date = this.calendar.date;\r\n        var lastDay = new Date(date.getMonth() + 1 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 1 > 12 ? 0 : date.getMonth() + 1, 0).getDate();\r\n        var previousLastDay = new Date(date.getMonth() < 0 ? date.getFullYear() - 1 : date.getFullYear(), date.getMonth() < 0 ? 11 : date.getMonth(), 0).getDate();\r\n\r\n        if (func == \"day\") {\r\n            if (date.getDate() != 1) {\r\n                this.changeDateTo(date.getDate() - 1);\r\n\r\n                this.update();\r\n            } else {\r\n                this.calendar.back('month');\r\n                this.changeDateTo(lastDay);\r\n\r\n                var organizerInstance = this;\r\n                organizerInstance.onMonthChange(function () {\r\n                    organizerInstance.indicateEvents();\r\n                });\r\n            }\r\n\r\n            document.getElementById(this.calendar.id + \"-day-radio-\" + (this.calendar.initday + date.getDate())).checked = true;\r\n        } else {\r\n            this.calendar.back(func);\r\n\r\n            var organizerInstance = this;\r\n            organizerInstance.onMonthChange(function () {\r\n                organizerInstance.indicateEvents();\r\n            });\r\n        }\r\n    },\r\n    next: function next(func) {\r\n        var date = this.calendar.date;\r\n        var lastDay = new Date(date.getMonth() + 1 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 1 > 12 ? 0 : date.getMonth() + 1, 0).getDate();\r\n        var soonLastDay = new Date(date.getMonth() + 2 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 2 > 12 ? 0 : date.getMonth() + 2, 0).getDate();\r\n\r\n        if (func == \"day\") {\r\n            if (date.getDate() != lastDay) {\r\n                date.setDate(date.getDate() + 1);\r\n\r\n                this.update();\r\n            } else {\r\n                this.calendar.next('month');\r\n                date.setDate(1);\r\n\r\n                var organizerInstance = this;\r\n                organizerInstance.onMonthChange(function () {\r\n                    organizerInstance.indicateEvents();\r\n                });\r\n            }\r\n\r\n            document.getElementById(this.calendar.id + \"-day-radio-\" + (this.calendar.initday + date.getDate())).checked = true;\r\n        } else {\r\n            this.calendar.next(func);\r\n\r\n            var organizerInstance = this;\r\n            organizerInstance.onMonthChange(function () {\r\n                organizerInstance.indicateEvents();\r\n            });\r\n        }\r\n    },\r\n    changeDateTo: function changeDateTo(theDay, theBlock) {\r\n        this.clearHistory();\r\n\r\n        var changedMonth = this.calendar.changeDateTo(theDay, theBlock);\r\n\r\n        var organizerInstance = this;\r\n        return organizerInstance.update();\r\n        setTimeout(function () {\r\n            if (changedMonth) {\r\n                organizerInstance.onMonthChange(function () {\r\n                    organizerInstance.indicateEvents();\r\n                });\r\n            } else return organizerInstance.update();\r\n        }, 1);\r\n    },\r\n    addDate: function changeDateTo(theDay, theBlock) {\r\n        this.showHistory();\r\n\r\n        var changedMonth = this.calendar.changeDateTo(theDay, theBlock);\r\n\r\n        var organizerInstance = this;\r\n        setTimeout(function () {\r\n            if (changedMonth) {\r\n                organizerInstance.onMonthChange(function () {\r\n                    organizerInstance.indicateEvents();\r\n                });\r\n            } else organizerInstance.update();\r\n        }, 1);\r\n    }\r\n};\r\n\r\nOrganizer.prototype.draw = function () {\r\n    var backSvg = '<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"' + this.calendar.colors[3] + '\" d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\"></path></svg>';\r\n    var nextSvg = '<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"' + this.calendar.colors[3] + '\" d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\"></path></svg>';\r\n\r\n    var theOrganizer = document.createElement(\"DIV\");\r\n    theOrganizer.className = \"cjslib-events cjslib-size-\" + this.calendar.size;\r\n\r\n    var theDate = document.createElement(\"DIV\");\r\n    theDate.className = \"cjslib-date\";\r\n    theDate.style.backgroundColor = this.calendar.colors[1];\r\n    theDate.style.color = this.calendar.colors[3];\r\n\r\n    var backSlider = document.createElement(\"DIV\");\r\n    backSlider.id = this.id + \"-day-back\";\r\n    backSlider.insertAdjacentHTML('beforeend', backSvg);\r\n    theDate.appendChild(backSlider.cloneNode(true));\r\n\r\n    var theText = document.createElement(\"SPAN\");\r\n    theText.id = this.id + \"-date\";\r\n    theDate.appendChild(theText.cloneNode(true));\r\n\r\n    var nextSlider = document.createElement(\"DIV\");\r\n    nextSlider.id = this.id + \"-day-next\";\r\n    nextSlider.insertAdjacentHTML('beforeend', nextSvg);\r\n    theDate.appendChild(nextSlider.cloneNode(true));\r\n\r\n    var theRows = document.createElement(\"DIV\");\r\n    theRows.className = \"cjslib-rows\";\r\n    theRows.id = this.id + \"-list-container\";\r\n\r\n    var theList = document.createElement(\"OL\");\r\n    theList.className = \"cjslib-list\";\r\n    theList.id = this.id + \"-list\";\r\n\r\n    var theHistory = document.createElement(\"OL\");\r\n    theHistory.className = \"cjslib-list\";\r\n    theHistory.id = this.id + \"-history\";\r\n\r\n    theRows.appendChild(theList.cloneNode(true));\r\n    theRows.appendChild(theHistory.cloneNode(true));\r\n\r\n    theOrganizer.appendChild(theDate.cloneNode(true));\r\n    theOrganizer.appendChild(theRows.cloneNode(true));\r\n\r\n    document.getElementById(this.id).appendChild(theOrganizer.cloneNode(true));\r\n};\r\n\r\nOrganizer.prototype.update = function () {\r\n    document.getElementById(this.id + \"-date\").innerHTML = this.calendar.months[this.calendar.date.getMonth()] + \" \" + this.calendar.date.getDate() + \", \" + this.calendar.date.getFullYear();\r\n    document.getElementById(this.id + \"-list\").innerHTML = \"\";\r\n    \r\n    return this.showEvents();\r\n};\r\n\r\nOrganizer.prototype.updateData = function (data) {\r\n    this.data = data;\r\n\r\n    this.indicateEvents();\r\n    this.update();\r\n};\r\n\r\nOrganizer.prototype.list = function (data) {\r\n    let events = {'booked': [], 'available': []}\r\n    console.log(\"WHAT\")\r\n    console.log(data)\r\n    for (let i = 0; i < data.length; i++) {\r\n        console.log(i)\r\n        for(event in data[type]){\r\n            let listItem = document.createElement(\"LI\");\r\n            listItem.id = this.id + \"-list-item-\" + type;\r\n    \r\n            \r\n    \r\n            let span = document.createElement(\"SPAN\");\r\n            span.id = this.id + \"-list-item-\" + type + \"-time\";\r\n            span.class = this.id + \" time\";\r\n            span.appendChild(document.createTextNode(data[type].startTime + ' - ' + data[type].endTime));\r\n            \r\n            let division = document.createElement(\"DIV\");\r\n            division.appendChild(span);\r\n    \r\n            let paragraph = document.createElement(\"P\");\r\n            paragraph.id = this.id + \"-list-item-\" + i + \"-text\";\r\n            paragraph.appendChild(document.createTextNode(data[i].text));\r\n    \r\n            listItem.appendChild(division);\r\n            listItem.appendChild(paragraph);\r\n\r\n            events[type].push(listItem);\r\n            \r\n        }\r\n        \r\n    }\r\n    console.log(\"LIST\")\r\n    console.log(events)\r\n    return events;\r\n};\r\n\r\nOrganizer.prototype.remember = function (date, content) {\r\n    if (content.startsWith(\"<div class=\\\"cjslib-list-placeholder\\\">\"))\r\n        return \"\";\r\n\r\n    let dateTitle = this.calendar.getDateString();\r\n    this.calendar.history.unshift(dateTitle);\r\n\r\n    let container = document.createElement(\"UL\");\r\n    container.className = \"cjslib-list cjslib-list-history\"\r\n\r\n    let title = document.createElement(\"LI\");\r\n    title.appendChild(document.createTextNode(dateTitle));\r\n    title.className = \"cjslib-list-history-title cjslib-date\";\r\n    title.style.backgroundColor = this.calendar.colors[1];\r\n    title.style.color = this.calendar.colors[3];\r\n\r\n    container.appendChild(title);\r\n\r\n    container.innerHTML += content;\r\n\r\n    return container.outerHTML;\r\n};\r\n\r\nOrganizer.prototype.clearHistory = function () {\r\n    this.calendar.history = [];\r\n    document.getElementById(this.id + \"-history\").innerHTML = \"\";\r\n}\r\n\r\nOrganizer.prototype.setupBlock = function (blockId, organizerInstance, callback) {\r\n    const calendarInstance = organizerInstance.calendar;\r\n\r\n    document.getElementById(calendarInstance.id + \"-day-\" + blockId).onclick = function (clickEvent) {\r\n        if (document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML.length > 0) {\r\n            if (document.getElementById(calendarInstance.id + \"-day-radio-\" + blockId).checked)\r\n                return;\r\n\r\n            var longPressed = \"\" + document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed;\r\n            document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed = false;\r\n\r\n            if (longPressed != \"true\") {\r\n                const dayNumBlock = document.getElementById(calendarInstance.id + \"-day-num-\" + blockId);\r\n                const dayBlock = document.getElementById(calendarInstance.id + \"-day-\" + blockId);\r\n                const eventList = organizerInstance.changeDateTo(dayNumBlock.innerHTML, blockId);\r\n                console.log('sasd')\r\n                console.log(eventList)\r\n\r\n                callback(clickEvent, eventList, dayBlock, calendarInstance);\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nOrganizer.prototype.showEvents = function (data) {\r\n    data = data || this.data;\r\n    const date = this.calendar.date;\r\n\r\n    return data[date.getFullYear()][date.getMonth() + 1][date.getDate()]\r\n};\r\n\r\nOrganizer.prototype.showHistory = function (data) {\r\n    data = data || this.data;\r\n    var date = this.calendar.date;\r\n\r\n    var content = this.remember(date, document.getElementById(this.id + \"-list\").innerHTML);\r\n    var history = document.getElementById(this.id + \"-history\").innerHTML;\r\n\r\n    document.getElementById(this.id + \"-history\").innerHTML = content + history;\r\n};\r\n\r\nOrganizer.prototype.showPlaceholder = function (data) {\r\n    var container = document.createElement(\"DIV\");\r\n    container.className = \"cjslib-list-placeholder\";\r\n\r\n    container.innerHTML = this.calendar.placeholder;\r\n\r\n    return container.outerHTML;\r\n};\r\n\r\nOrganizer.prototype.indicateEvents = function (data) {\r\n    data = data || this.data;\r\n    var date = this.calendar.date;\r\n    console.log(data)\r\n\r\n    if (this.calendar.indicator) {\r\n        var allDays = document.getElementsByClassName(this.calendar.id + \" cjslib-day cjslib-day-listed\");\r\n\r\n        for (var i = 0; i < allDays.length; i++) {\r\n            allDays[i].children[1].innerHTML = \"\";\r\n        }\r\n\r\n        try {\r\n            var month = data[date.getFullYear()][date.getMonth() + 1];\r\n            \r\n            for (var key in month) {\r\n                console.log(key)\r\n                console.log(month)\r\n                if (month[key]['booked'].length > 0){\r\n                    allDays[key - 1].children[1].innerHTML = (month[key]['booked'].length > 9) ? \"9+\" : month[key]['booked'].length;\r\n                }\r\n                    \r\n        \r\n            }\r\n        } catch (e) {}\r\n    }\r\n\r\n    this.update();\r\n};\r\n\r\nOrganizer.prototype.onMonthChange = function (callback) {\r\n    callback();\r\n};\r\n\r\nOrganizer.prototype.setOnClickListener = function (theCase, backCallback, nextCallback) {\r\n    var calendarId = this.calendar.id;\r\n    var organizerId = this.id;\r\n\r\n    backCallback = backCallback || function () {};\r\n    nextCallback = nextCallback || function () {};\r\n\r\n    var organizerInstance = this;\r\n\r\n    switch (theCase) {\r\n        case \"days-blocks\":\r\n            for (var i = 1; i <= 42; i++) {\r\n                organizerInstance.setupBlock(i, organizerInstance, backCallback);\r\n            }\r\n            break;\r\n        case \"day-slider\":\r\n            document.getElementById(organizerId + \"-day-back\").onclick = function () {\r\n                organizerInstance.back('day');\r\n                backCallback();\r\n            };\r\n            document.getElementById(organizerId + \"-day-next\").onclick = function () {\r\n                organizerInstance.next('day');\r\n                nextCallback();\r\n            };\r\n            break;\r\n        case \"month-slider\":\r\n            document.getElementById(calendarId + \"-month-back\").onclick = function () {\r\n                organizerInstance.back('month');\r\n                backCallback();\r\n            };\r\n            document.getElementById(calendarId + \"-month-next\").onclick = function () {\r\n                organizerInstance.next('month');\r\n                nextCallback();\r\n            };\r\n            break;\r\n        case \"year-slider\":\r\n            document.getElementById(calendarId + \"-year-back\").onclick = function () {\r\n                organizerInstance.back('year');\r\n                backCallback();\r\n            };\r\n            document.getElementById(calendarId + \"-year-next\").onclick = function () {\r\n                organizerInstance.next('year');\r\n                nextCallback();\r\n            };\r\n            break;\r\n    }\r\n};\r\n\r\nOrganizer.prototype.setupLongClickBlock = function (blockId, organizerInstance, callback) {\r\n    var calendarInstance = organizerInstance.calendar;\r\n\r\n    var mouseDownEvent = function () {\r\n        document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed = \"-\";\r\n\r\n        window.setTimeout(function () {\r\n            if (document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML.length > 0) {\r\n                if (document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed == \"false\")\r\n                    return;\r\n                else document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed = true;\r\n\r\n                if (document.getElementById(calendarInstance.id + \"-day-radio-\" + blockId).checked)\r\n                    return;\r\n\r\n                organizerInstance.addDate(document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML, blockId);\r\n        \r\n                callback();\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n    document.getElementById(calendarInstance.id + \"-day-\" + blockId).onmousedown = mouseDownEvent;\r\n    document.getElementById(calendarInstance.id + \"-day-\" + blockId).ontouchstart = mouseDownEvent;\r\n};\r\n\r\nOrganizer.prototype.setOnLongClickListener = function (theCase, backCallback, nextCallback) {\r\n    var calendarId = this.calendar.id;\r\n    var organizerId = this.id;\r\n\r\n    backCallback = backCallback || function () {};\r\n    nextCallback = nextCallback || function () {};\r\n\r\n    var organizerInstance = this;\r\n\r\n    switch (theCase) {\r\n        case \"days-blocks\":\r\n            for (var i = 1; i <= 42; i++) {\r\n                organizerInstance.setupLongClickBlock(i, organizerInstance, backCallback);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _calendar_javascript_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calendar-javascript-lib */ \"./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js\");\n\n\nclass EventCalendar{\n\n    constructor(){\n        this.timeslots = [];\n    }\n\n    initiateCalendar(){\n\n        const calendar = document.querySelector('.c-calendar');\n        if(calendar){\n            const eventsUrl = calendar.getAttribute('eventsUrl');\n            const bookingUrl = calendar.getAttribute('bookingUrl');\n            const size = calendar.getAttribute('size');\n            const weekStart = calendar.getAttribute('weekStart'); \n\n            this.getEvents(eventsUrl).then(data => this.setup(data, weekStart, size, calendar, bookingUrl));\n        }\n        \n    }\n\n    getEvents(eventsUrl){ \n        return fetch(eventsUrl)\n            .then(response => response.json())\n            .then(data => {\n                return data;\n            });\n    }\n\n    postEvents(bookingUrl){\n        fetch(bookingUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.timeslots)\n        })\n    }\n\n    setButtonListener(calendarElement, bookingUrl){\n        const button = calendarElement.getElementsByClassName('postEventButton');\n        button[0].addEventListener('click',() =>{\n            this.postEvents(bookingUrl)\n        })\n    }\n\n    // TODO: modify lib to return timestamps directly instead of strings...\n    setTimeslotListener(checkbox, date, timeslot){\n        checkbox.addEventListener('change', (event) => {\n            const timeslotParts = timeslot.split(' - ')\n            const from = timeslotParts[0].split(':')[0];\n            const to = timeslotParts[1].split(':')[0];\n            const temp = {\n                from: date.setHours(parseInt(from), 0, 0, 0),\n                to: date.setHours(parseInt(to), 0, 0, 0)\n            }\n            \n            if(checkbox.checked){\n                this.timeslots.push(temp)\n            }else if(!checkbox.checked) {\n                //remove timestamp if checked and then unchecked\n                for(let i = 0; i < this.timeslots.length; i++){\n                    if(JSON.stringify(this.timeslots[i]) === JSON.stringify(temp)){\n                        this.timeslots.splice(i, 1)\n                    }\n                }\n            }\n        });\n    }\n\n    //TODO: Research the possibility to make the elment a bit less complex.\n    createListElement(events, date, availableEvents){\n        let listItem = document.createElement(\"LI\");\n        \n        for(let i = 0; i < events.length; i++){\n            const timeslot = events[i].startTime + ' - ' + events[i].endTime;\n            listItem.id = this.id + \"-list-item-\" + i;\n    \n            let division = document.createElement(\"DIV\");\n            \n            let checkbox = document.createElement('INPUT');\n            checkbox.setAttribute('type', 'checkbox');\n            this.setTimeslotListener(checkbox, date, timeslot);\n\n            let span = document.createElement(\"SPAN\");\n            span.id = this.id + \"-list-item-\" + i + \"-time\";\n            span.class = this.id + \" time\";\n            span.appendChild(document.createTextNode(events[i].startTime + ' - ' + events[i].endTime));\n\n            division.appendChild(span);\n    \n            let paragraph = document.createElement(\"P\");\n            paragraph.id = this.id + \"-list-item-\" + i + \"-text\";\n            paragraph.appendChild(document.createTextNode(events[i].text));\n            \n            if(availableEvents) paragraph.appendChild(checkbox);\n\n            listItem.appendChild(division);\n            listItem.appendChild(paragraph);\n        }\n        \n        return listItem\n\n    }\n\n    setup (data, weekStart, size, calendarElement, postUrl){\n        let calendar = new _calendar_javascript_lib__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"](\"calendarContainer\",\n\t\t\t\tsize,\n\t\t\t\t[\n\t\t\t\t\tweekStart,\n\t\t\t\t\t3\n                ], \n                [],\n\t\t\t\t{\n\t\t\t\t\tindicator: true,\n\t\t\t\t\tindicator_type: 1,\n\t\t\t\t\tindicator_pos: \"bottom\"\n\t\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tlet organizer = new _calendar_javascript_lib__WEBPACK_IMPORTED_MODULE_0__[\"Organizer\"](\"organizerContainer\",\n\t\t\t\tcalendar,\n\t\t\t\tdata\n            );\n        \n            this.setButtonListener(calendarElement, postUrl);\n            organizer.setOnClickListener('days-blocks',\n                (clickEvent, eventsList, element, calendarInstance) => {\n                    const modalId = clickEvent.target.getAttribute('data-open'); \n\n                    let modal = document.getElementById(modalId)\n                    const isVisible = \"c-modal__bg--is-visible\";\n\n                    modal.classList.add(isVisible);\n                    const list = calendarElement.querySelector('.c-calendar__event-list');\n                    let bookedEvents = list.querySelector('.booked__list');\n                    let availableEvents = list.querySelector('.available__list');\n                    let listHeader = bookedEvents.closest('.c-modal').querySelector('header').querySelector('h2')\n\n                    listHeader.innerHTML = '';\n                    availableEvents.innerHTML = '';\n                    bookedEvents.innerHTML = '';\n\n                    listHeader.innerHTML = calendarInstance.date.getDate() + '/' + calendarInstance.date.getMonth() + 1 + '/' + calendarInstance.date.getFullYear();\n\n                    if(eventsList.booked)\n                        bookedEvents.appendChild(this.createListElement(eventsList.booked, calendarInstance.date, false));\n                    if(eventsList.available)\n                        availableEvents.appendChild(this.createListElement(eventsList.available, calendarInstance.date, true));\n\n\n                }\n            );\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (EventCalendar);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js ***!
  \***************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _the_datepicker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./the-datepicker */ \"./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js\");\n\n\nconst datepickers = document.querySelectorAll('[js-datepicker=\"1\"]');\n\nif (datepickers.length > 0) {\n    datepickers.forEach(element => {\n        const datepicker = new _the_datepicker__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Datepicker(element);\n\n        datepicker.options.setInputFormat('j/n/Y');\n        datepicker.options.setTitle(element.getAttribute('c-datepicker-title'));\n        datepicker.options.setDaysOutOfMonthVisible(element.getAttribute('c-datepicker-showdaysoutofmonth'));\n        datepicker.options.setShowResetButton(element.getAttribute('c-datepicker-showresetbutton'));\n        datepicker.options.setShowDeselectButton(element.getAttribute('c-datepicker-showclearbutton'));\n        datepicker.options.setHideOnBlur(element.getAttribute('c-datepicker-hideonblur'));\n        datepicker.options.setHideOnSelect(element.getAttribute('c-datepicker-hideonselect'));\n        datepicker.options.setMinDate(element.getAttribute('c-datepicker-min'));\n        datepicker.options.setMaxDate(element.getAttribute('c-datepicker-max'));\n\n        datepicker.render();\n    });\n}\n\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Dropdown {\n\n    constructor() {\n\n        this.DROPDOWN_LIST_VISIBLE = 'c-dropdown__list--visible';\n        this.AUTO_POSITION_LEFT = 'c-dropdown__auto--position-left';\n        this.AUTO_POSITION_RIGHT = 'c-dropdown__auto--position-right';\n\n        //this.onResize();\n    }\n\n    /**\n     * Set Valid Targets and fire toogle\n     */\n    setValidTargets() {\n\n        const dropdowns = document.getElementsByClassName('c-dropdown--on-click');\n\n        for (let dropdown of dropdowns) {\n\n            let dropDownList = (dropdown.getElementsByClassName('c-dropdown__list')[0]) ?\n                dropdown.getElementsByClassName('c-dropdown__list')[0] : '';\n\n            let dropdownButton = (dropdown.getElementsByTagName('button')[0]) ?\n                dropdown.getElementsByTagName('button')[0] : '';\n\n            let buttonLabel = (dropdownButton.getElementsByClassName('c-button__label-text')[0]) ?\n                dropdownButton.getElementsByClassName('c-button__label-text')[0] : '';\n\n            let buttonIcon = (dropdownButton.getElementsByTagName('i')[0]) ?\n                dropdownButton.getElementsByTagName('i')[0] : '';\n\n            let validTargets = [dropDownList, dropdownButton, buttonLabel, buttonIcon];\n\n            this.toggle(validTargets, dropDownList);\n        }\n    }\n\n    /**\n     * Set outbound position\n     * @param dropDownList\n     */\n    setOutBound(dropDownList) {\n\n        let isOutOfBound = this.isInViewport(dropDownList);\n\n        (isOutOfBound.left) ? dropDownList.classList.add(this.AUTO_POSITION_LEFT) :\n            dropDownList.classList.remove(this.AUTO_POSITION_LEFT);\n\n        (isOutOfBound.right) ? dropDownList.classList.add(this.AUTO_POSITION_RIGHT) :\n            dropDownList.classList.remove(this.AUTO_POSITION_RIGHT);\n    }\n\n    /**\n     * Toogle dropdown on and of\n     * @param validTargets\n     * @param dropDownList\n     */\n    toggle(validTargets, dropDownList) {\n\n        //this.setOutBound(dropDownList);\n\n        document.addEventListener('click', (event) => {\n            let target = event.target;\n            if (validTargets.includes(target) && !dropDownList.classList.contains(this.DROPDOWN_LIST_VISIBLE)) {\n                console.log(validTargets.includes(target));\n                dropDownList.classList.add(this.DROPDOWN_LIST_VISIBLE);\n            } else {\n                dropDownList.classList.remove(this.DROPDOWN_LIST_VISIBLE);\n            }\n        });\n    }\n\n    /**\n     * Resize - Run check\n     */\n    onResize() {\n\n        const self = this;\n        window.addEventListener('resize', () => {\n            self.setValidTargets();\n        });\n    }\n\n    /**\n     * Checking Element bounderies\n     * @param element\n     * @returns {{}}\n     */\n    isInViewport(element) {\n\n        const bounding = element.getBoundingClientRect();\n        const clientScreen = (window.innerWidth || document.documentElement.clientWidth);\n\n        let out = {};\n\n        out.top = bounding.top < 0;\n        out.left = bounding.left < 0;\n        out.bottom = bounding.bottom > (window.innerHeight || document.documentElement.clientHeight);\n        out.right = (bounding.right + 20) > clientScreen;\n        out.any = out.top || out.left || out.bottom || out.right;\n        out.all = out.top && out.left && out.bottom && out.right;\n\n        return out;\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Dropdown);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/equal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/equal.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Equal height */ \n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/equal.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* Toggle expandable areas */\n\nconst CONTAINER = '[js-expand-container]';\nconst BUTTON = '[js-expand-button]';\nconst EXPANDED = 'aria-expanded';\nconst CONTROLS = 'aria-controls';\nconst HIDDEN = 'aria-hidden';\n\n/**\n * Adds toggle event listeners to expandable elements\n */\nconst expandSection = () => {\n    const buttons = document.querySelectorAll(BUTTON);\n\n    buttons.forEach((button) => {\n        button.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            const expanded = button.getAttribute(EXPANDED) === 'true';\n            toggleButton(button, expanded);\n        });\n    });\n};\n\n/**\n * Toggles a button's and its siblings \"pressed\" state\n * @param {HTMLElement} button\n * @param {bool} expanded\n */\nconst toggleButton = (button, expanded) => {\n    const container = button.closest(CONTAINER);\n    let safeExpanded = expanded;\n\n    if (!container) {\n        throw new Error(`${BUTTON} is missing outer ${CONTAINER}`);\n    }\n\n    // Check if elemnt is a tab\n    const isTab = button.getAttribute('role') === 'tab';\n    // Bail if is tab and is already selected\n    if (expanded && isTab) {\n        return;\n    }\n\n    safeExpanded = toggle(button, !expanded);\n\n    if (safeExpanded) {\n        const containerButtons = container.querySelectorAll(BUTTON);\n\n        containerButtons.forEach((other) => {\n            if (other !== button) {\n                toggle(other, false);\n            }\n        });\n    }\n};\n\n/**\n * Toggle helper\n * @param {HTMLElement} button\n * @param {bool} expanded\n * @return {boolean} the resulting state\n */\nconst toggle = (button, expanded) => {\n    let safeExpanded = expanded;\n\n    if (typeof safeExpanded !== 'boolean') {\n        safeExpanded = button.getAttribute(EXPANDED) === 'false';\n    }\n\n    button.setAttribute(EXPANDED, safeExpanded);\n\n    const id = button.getAttribute(CONTROLS);\n    const controls = document.getElementById(id);\n\n    if (!controls) {\n        throw new Error(`No toggle target found with id: \"${id}\"`);\n    }\n\n    if (safeExpanded) {\n        controls.setAttribute(HIDDEN, 'false');\n    } else {\n        controls.setAttribute(HIDDEN, 'true');\n    }\n\n    return safeExpanded;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (expandSection);\n\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/fields.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/fields.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Fields {\n    \n    constructor() {\n        \n        \n        this.form = document.getElementsByTagName('form')[0];\n        this.formElement = null;\n        this.formElementType = null;\n        this.formElementPattern = null;\n        this.formElementRequired = null;\n        this.formElementDataInvalid = null;\n        this.formElementDataInvalid = null;\n        \n        this.formValidationEventListerners();\n        this.fileInputOnChange();\n    }\n    \n    \n    /**\n     * File input - List files to upload\n     */\n    fileInputOnChange() {\n        \n        const self = this;\n        const inputs = document.querySelectorAll('.c-fileinput__input');\n        \n        for (const formInput of inputs) {\n            \n            let inputId = formInput.getAttribute('id');\n            \n            document.getElementById(inputId).addEventListener('change', function (e) {\n                if (e.target.files && e.target.files[0]) {\n                    \n                    const findContainer = this.closest('div').querySelector('ul');\n                    const fileNameContainer = findContainer.getAttribute('id');\n                    \n                    for (let int = 0; int < e.target.files.length; int++) {\n                        const createListElement = document.createElement('li');\n                        const listelement = document.getElementById(fileNameContainer).appendChild(createListElement);\n                        const fileSize = self.returnFileSize(e.target.files[int].size);\n                        listelement.innerHTML = '<i class=\"c-icon c-icon--size-sm material-icons\">' +\n                            'attach_file</i><span class=\"c-icon__label c-icon__label--size\"> '+fileSize +', </span> <span class=\"c-icon__label\"><b>' + e.target.files[int].name + '</b></span>';\n                    }\n                }\n            });\n        }\n    }\n    \n    /**\n     * FileSize\n     * @param number\n     * @returns {string}\n     */\n    returnFileSize(number) {\n        if(number < 1024) {\n            return number + ' bytes';\n        } else if(number >= 1024 && number < 1048576) {\n            return (number/1024).toFixed(1) + ' KB';\n        } else if(number >= 1048576) {\n            return (number/1048576).toFixed(1) + ' MB';\n        }\n    }\n    \n    /**\n     * A simple input validation matcing input value with value\n     * Listerners Click and change\n     */\n    formValidationEventListerners() {\n        \n        const self = this;\n        const inputs = document.querySelectorAll('input[required], textarea[required]');\n        \n        for (const formInput of inputs) {\n            let inputId = formInput.getAttribute('id');\n            // On Click event listener - Setting data\n            document.getElementById(inputId).addEventListener('click', function (e) {\n                self.formElement = this;\n                \n                self.formElementType = (self.formElement.getAttribute('type')) ?\n                    self.formElement.getAttribute('type') : null;\n                \n                self.formElementPattern = (self.formElement.getAttribute('pattern')) ?\n                    self.formElement.getAttribute('pattern') : null;\n                \n                self.formElementRequired = (self.formElement.getAttribute('data-required')) ?\n                    self.formElement.getAttribute('pattern') : null;\n                \n                self.formElementDataInvalidMessage = (self.formElement.getAttribute('data-invalid-message')) ?\n                    self.formElement.getAttribute('data-invalid-message') : '';\n            });\n            \n            // On Change event listener\n            document.getElementById(inputId).addEventListener('change', function (element) {\n                self.validateFormField(element);\n            });\n        }\n    }\n    \n    \n    /**\n     * Validate Form fields by pattern\n     * @param element\n     */\n    validateFormField(element) {\n        \n        if (!('remove' in Element.prototype)) {\n            Element.prototype.remove = function () {\n                if (this.parentNode) {\n                    this.parentNode.removeChild(this);\n                }\n            };\n        }\n        \n        this.formElement.classList.remove('invalid');\n        this.formElement.classList.remove('valid');\n        \n        // If Require is on\n        if (this.formElementRequired) {\n            \n            let valid = false;\n            if (this.formElementPattern) {\n                valid = (this.formElement.value.match(this.formElementPattern)) ? true : false;\n            } else {\n                valid = true;\n            }\n            \n            const id = this.formElement.getAttribute('id');\n            console.log(this.formElement);\n            if (!valid && !this.formElement.checkValidity()) {\n                this.formElement.classList.add('invalid');\n                \n                if (this.formElementDataInvalidMessage) {\n                    const errorMessage = document.getElementById('error_' + id + '_message');\n                    errorMessage.classList.add('error');\n                    errorMessage.getElementsByClassName(\"errorText\")[0].innerHTML = this.formElementDataInvalidMessage;\n                }\n                \n            } else {\n                document.getElementById('error_' + id + '_message').classList.remove('error');\n                this.formElement.className = \"valid\";\n            }\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Fields);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/fields.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/filter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/filter.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Filter; });\n/* Filter lists */\nconst   CONTAINER = \"[js-filter-container]\",\n        ITEM = \"[js-filter-item]\",\n        DATA = \"[js-filter-data]\",\n        INPUT = \"[js-filter-input]\";\n\nclass Filter {\n    constructor() {\n        this.list = [];\n\n        this.enableSearch();\n    }\n\n    enableSearch() {\n        let containers = document.querySelectorAll(CONTAINER);//Get filterable elements\n\n        containers.forEach((container) => {\n\n            //Get filterable items\n            container.querySelectorAll(ITEM).forEach((item) => {\n                let dataItems = item.querySelectorAll(DATA);\n                let dataString = '';\n\n                //Build search string\n                dataItems.forEach((data) => {\n                    dataString = dataString.concat(data.innerText);\n                });\n\n                //Add to search array\n                this.list.push({\n                    searchId: container.getAttribute('js-filter-container'), //Get id\n                    element: item,\n                    parent: item.parentNode,\n                    data: dataString.toLowerCase()\n                });\n            });\n\n            //Get inputs\n            container.querySelectorAll(INPUT).forEach((input) => {\n                input.addEventListener('input', () => {\n                    let inputId = input.getAttribute('js-filter-input');\n\n                    this.list.forEach((item) => {\n                        if (item.searchId === inputId) {\n                            //Get search term and search in item\n                            let res = item.data.search(input.value.toLocaleLowerCase());\n\n                            if (res < 0) {\n                                item.element.remove(); //Remove unmatched\n                            } else {\n                                item.parent.append(item.element); //Readd match\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n}\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/filter.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js":
/*!************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _steppers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./steppers */ \"./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js\");\n/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./image */ \"./node_modules/@helsingborg-stad/styleguide/source/js/image.js\");\n/**\n * Component Gallery\n */\n\n\n\nclass Gallery {\n\n    constructor() {\n\n        this.imageDataSet = [];\n        this.imageData = {};\n        this.modalImg = '';\n        this.modalId = null;\n        this.container = null;\n        this.isVisible = \"c-modal__bg--is-visible\";\n        this.StepperInstance = {};\n\n        this.Image = new _image__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n        this.StepperInstance = new _steppers__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    }\n\n    /**\n     * Init Modal Image in Gallery\n     * @param modalId\n     * @param modalImage\n     */\n    initImage(modalId, modalImage) {\n\n        const self = this;\n        this.modalId = modalId;\n        this.modalImg = modalImage;\n\n        for (let img of document.querySelectorAll(\"[data-large-img]\")) {\n            this.imageDataSet.push({\n                image: img.getAttribute('data-large-img'),\n                imageStep: img.getAttribute('data-stepping'),\n                imageCaption: img.getAttribute('data-caption')\n            });\n\n            if (img.getAttribute('data-large-img') === this.modalImg) {\n                this.imageData.image = img.getAttribute('data-large-img');\n                this.imageData.imageStep = img.getAttribute('data-stepping');\n                this.imageData.imageCaption = img.getAttribute('data-caption');\n            }\n        }\n\n        this.container = document.getElementById(this.modalId);\n        this.container.querySelector('.c-image').innerHTML = '';\n        self.createImg(this.container, this.imageData);\n\n    }\n\n    /**\n     * Enable Gallery\n     * Next, Previous image by click or keys\n     */\n    enableGallery() {\n\n        const self = this;\n\n        const nextTrigger = document.querySelectorAll(\"[data-next]\");\n        const prevTrigger = document.querySelectorAll(\"[data-prev]\");\n\n        // Next Image\n        for (const nxt of nextTrigger) {\n            nxt.addEventListener(\"click\", function () {\n                self.imageData = self.cycleImage('next');\n            });\n        }\n\n        // Previous image\n        for (const prev of prevTrigger) {\n            prev.addEventListener(\"click\", function () {\n                self.imageData = self.cycleImage('prev');\n            });\n        }\n\n        // Pressing Right key to skip to next\n        for (const nxt of nextTrigger) {\n            document.addEventListener(\"keyup\", e => {\n                if (e.key === \"ArrowRight\" && document.querySelector(`.${self.isVisible}`)) {\n                    self.imageData = self.cycleImage('next');\n                }\n            });\n        }\n\n        // Pressing Left key to skip to previous\n        for (const nxt of nextTrigger) {\n            document.addEventListener(\"keyup\", e => {\n                if (e.key === \"ArrowLeft\" && document.querySelector(`.${self.isVisible}`)) {\n                    self.imageData = self.cycleImage('prev');\n                }\n            });\n        }\n    }\n\n    /**\n     * Next & previous Image\n     * @param nav\n     * @returns {*}\n     */\n    cycleImage(nav) {\n        const self = this;\n\n        let currentIndex = parseInt(this.imageData.imageStep);\n        let nextIndex = (nav === 'next') ?\n            (currentIndex + 1) % this.imageDataSet.length :\n            (currentIndex - 1) % this.imageDataSet.length;\n\n        nextIndex = (nextIndex < 0) ? this.imageDataSet.length - 1 : nextIndex;\n        (currentIndex > this.imageDataSet.length) ?\n            this.createImg(this.container, this.imageDataSet[0]) :\n            this.createImg(this.container, this.imageDataSet[nextIndex]);\n\n        return this.imageDataSet[nextIndex];\n    }\n\n    /**\n     * Create Image in modal\n     * @param containerId\n     * @param imgSrc\n     */\n    createImg(containerId, imgSrc) {\n\n        const container = containerId.querySelector('.c-image');\n        const containerModalContent = containerId.querySelector('.c-modal__content');\n        this.imageData = imgSrc;\n\n        if (!('remove' in Element.prototype)) {\n            Element.prototype.remove = function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild(this);\n                }\n            };\n        }\n\n        if (container.querySelectorAll('img').length === 0) {\n\n            container.innerHTML = '';\n            container.classList.remove('c-image--is-placeholder');\n\n            this.Image.initImage({\n                'elementContainer': container,\n                'attrList': {\n                    'src': imgSrc.image,\n                    'data-step': imgSrc.imageStep,\n                    'data-caption': imgSrc.imageCaption\n                },\n                'classList': ['c-image__image']\n            });\n\n            this.imageCaption(containerModalContent, imgSrc);\n            this.StepperInstance.enableStepper('dots', this.container, this.imageDataSet.length, true);\n\n        } else {\n            container.querySelector('.c-image__image').src = imgSrc.image;\n            container.querySelector('.c-image__image').setAttribute('data-step', imgSrc.imageStep);\n\n            this.imageCaption(containerModalContent, imgSrc);\n            this.StepperInstance.enableStepper('dots', this.container, this.imageDataSet.length, false);\n        }\n    }\n\n    /**\n     * Setting image caption\n     * @param containerModalContent\n     * @param imgSrc\n     */\n    imageCaption(containerModalContent, imgSrc) {\n        if (imgSrc.imageCaption) {\n            if (containerModalContent.querySelector('.c-image__caption') !== null) {\n                containerModalContent.querySelector('.c-image__caption').remove();\n            }\n            containerModalContent.insertAdjacentHTML(\"beforeend\",\n                '<figcaption class=\"c-image__caption\">' + imgSrc.imageCaption + '</figcaption>');\n        }\n    }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gallery);\n\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/image.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/image.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Component Image\n */\nclass Image {\n\n    constructor() {\n\n        this.image = null;\n        this.container = null;\n        this.imgAttr = null;\n        this.imgCss = null;\n    }\n\n    /**\n     * Init\n     * @return void\n     */\n    initImage(imageData) {\n\n        this.container = imageData.elementContainer;\n        this.imgAttr = imageData.attrList;\n        this.imgCss = imageData.classList;\n        this.image = document.createElement(\"img\");\n\n        this.appendImage();\n    }\n\n    /**\n     * Setting Image Attributes\n     * @return void\n     */\n    setAttr(){\n\n        if (this.imgAttr.src) {\n            for (let [key, value] of Object.entries(this.imgAttr)) {\n                this.image.setAttribute(`${key}`, value);\n            }\n        }\n    }\n\n    /**\n     * Adding CSS classes\n     * @return void\n     */\n    setCSSClasses(){\n\n        if (this.imgCss.length > 0) {\n            for (const cssClass of this.imgCss) {\n                this.image.classList.add(cssClass);\n            }\n        }\n    }\n\n    /**\n     * Append image to container\n     * @param img\n     */\n    appendImage() {\n\n        this.setAttr();\n        this.container.appendChild(this.image);\n        this.setCSSClasses();\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Image);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/image.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Main js file */ \n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/index.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/initBuild.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/initBuild.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass initBuild {\n    \n    constructor() {\n        this.sassComponentBuilder();\n    }\n    \n    /**\n     * Copy Markup to clipboard....\n     */\n    copyGenLinks() {\n        const copyLink = document.querySelector('.c-button--copy-compiled-link').getAttribute('id');\n        document.getElementById(copyLink).addEventListener('click', function (element) {\n            navigator.clipboard.writeText(document.getElementById('compiledCSS').innerText)\n                .then(() => {\n                    document.querySelector('.c-button--copy-compiled-link').innerText = 'COPIED!';\n                    setTimeout(function () {\n                        document.querySelector('.c-button--copy-compiled-link').innerText = 'COPY';\n                    }, 3000);\n                })\n                .catch(err => {\n                    console.error('Sorry! - Could not copy markup: ', err);\n                });\n        });\n    }\n    \n    /**\n     * Sending data to CSS compiler\n     */\n    sassComponentBuilder() {\n        \n        const self = this;\n        \n        if (!document.querySelector('.c-button--generate-css')) {\n            return;\n        }\n        \n        // Prepare to generate build\n        const generateCSS = document.querySelector('.c-button--generate-css').getAttribute('id');\n        document.getElementById(generateCSS).addEventListener('click', function (e) {\n            \n            self.changeMarkupState('preBuild', null);\n            \n            const componentArray = [];\n            const checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n            \n            // Loop through all component checkboxes\n            for (let i = 0; i < checkboxes.length; i++) {\n                componentArray.push(checkboxes[i].value);\n            }\n            \n            // Set display none to CSS Link Code area\n            if (!document.body.classList.contains('u-display--none')) {\n                document.querySelector('.online-compiled-components').classList.add('u-display--none');\n            }\n            \n            if (!componentArray.length > 0) {\n                return;\n            }\n            \n            // Get selected component values and create list of component from selection\n            for (let i = 0; i < checkboxes.length; i++) {\n                checkboxes[i].checked = false;\n                \n                let node = document.createElement(\"span\");\n                let nodeIcon = document.createElement(\"i\");\n                let textNode = document.createTextNode(componentArray[i]);\n                let textNodeIcon = document.createTextNode('extension');\n                \n                node.appendChild(textNode);\n                nodeIcon.appendChild(textNodeIcon);\n                \n                node.classList.add('component-list', 'comp-list-item-'+i, 'c-tags', 'c-tag--default');\n                nodeIcon.classList.add('c-icon', 'c-icon--size-sm', 'material-icons');\n                //node.setAttribute('disabled', 'disabled');\n                \n                document.querySelector('.selected-components').appendChild(node);\n                document.querySelector('.comp-list-item-'+i).prepend(nodeIcon);\n                \n            }\n            \n            // Create SCSS and Build CSS\n            self.changeMarkupState('build', null);\n            self.fetchFormData(componentArray);\n            \n            // Change markup\n            self.changeMarkupState('postBuild', null);\n        });\n    };\n    \n    \n    /**\n     * FetchData - Send componentData to node\n     * Build SCSS & compile SCC\n     * @param componentArray\n     */\n    fetchFormData(componentArray) {\n        const self = this;\n        \n        fetch(\"http://localhost:1337/compilesasscomponent\", {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify({\n                \"payload\": componentArray\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                return res.json();\n            })\n            .then(res => {\n                // Wait for 10 secs until stuff is done....\n                setTimeout(function () {\n                    const cssLink = res.cssFile;\n                    const cssUrl = 'https://' + window.location.hostname + cssLink;\n                    \n                    self.changeMarkupState('result', cssUrl);\n                    self.copyGenLinks();\n                    \n                }, 2000);\n            })\n    };\n    \n    \n    /**\n     * Change stuff in markup\n     * @param cssUrl\n     */\n    changeMarkupState(buildState, cssUrl) {\n        \n        switch (buildState) {\n            \n            case \"preBuild\":\n                document.querySelector('.selected-components').innerHTML = '';\n                document.querySelector('.Selected-components-title').innerHTML = '';\n                break;\n            \n            case \"build\":\n                document.querySelector('.c-loader--text').classList.remove('u-display--none');\n                document.querySelector('.selected-components-loader').classList.remove('u-display--none');\n                document.querySelector('.Selected-components-title')\n                    .innerHTML = 'Compiling CSS with following components:';\n                break;\n            \n            case \"postBuild\":\n                document.querySelector('.c-button--generate-css').blur();\n                document.querySelector('.c-button--generate-css').innerHTML = 'Compiling CSS';\n                document.querySelector('.c-button--generate-css')\n                    .setAttribute('disabled', 'disabled');\n                break;\n            \n            case \"result\":\n                document.querySelector('.online-compiled-components').classList.remove('u-display--none');\n                document.querySelector('.selected-components-loader').classList.add('u-display--none');\n                document.querySelector('.c-loader--text').classList.add('u-display--none');\n                document.querySelector('.c-button--generate-css').innerHTML = 'Generate CSS';\n                document.querySelector('.c-button--generate-css').removeAttribute('disabled');\n                document.getElementById('css-code-template').setAttribute('href', cssUrl);\n                document.getElementById('css-code-template').innerHTML = cssUrl;\n                break;\n        }\n    };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initBuild);\n\n\n\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/initBuild.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/menu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/menu.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Menu; });\nclass Menu {\n    constructor() {\n        this.TRIGGER = 'js-menu-trigger';\n        this.DART = 'js-menu-dart';\n        this.TARGET = 'js-menu-target';\n        this.EXPANDID = 'data-load-submenu';\n\n        this.elm = '';\n\n        this.getSubitem();\n        this.getNavbar();\n    }\n\n    /**\n     * Finds each navbar in the document.\n     * \n     * Finds each navbar in the document and then sends it for further handling\n     */\n    getNavbar() {\n        const navbar = document.querySelectorAll(\".c-navbar\");\n\n        navbar.forEach((element) => {\n            this.addTriggers(element)\n        })\n    }\n\n    /**\n     * Adds event listeners to the link items.\n     * \n     * @param {*} element   The navbar element to add triggers to\n     */\n    addTriggers(element) {\n        const triggers = element.querySelectorAll(`[${this.TRIGGER}]`);\n\n        triggers.forEach((trigger) => {\n            const toggleClass = trigger.getAttribute(this.TRIGGER);\n            const targetId = trigger.getAttribute(this.DART);\n\n            trigger.addEventListener('click', (event) => {\n                const targets = document.querySelectorAll(`[${this.TARGET}=\"${targetId}\"]`);\n\n                targets.forEach((target) => {\n                    target.classList.toggle(toggleClass);\n                })\n            });\n        });\n    }\n\n    /**\n     * Looks if a nav items has children.\n     * \n     * First looks if nav items has children, if it does then it add and event listener to the toggle button\n     * \n     * @param {*} root  The container to look inside, cna be a single nav item or the root navbar\n     */\n    getSubitem(root) {\n        const IDS = root ? root.querySelectorAll(`[${this.EXPANDID}]`) : document.querySelectorAll(`[${this.EXPANDID}]`)\n\n        IDS.forEach((id) => {\n            id.addEventListener('click', (event) => {\n                event.preventDefault();\n                id.toggleAttribute(\"is-open\");\n\n                if (!id.hasAttribute(\"data-isAppended-subitem\")) {\n                    id.setAttribute('data-isAppended-subitem', '');\n                    this.findItems([], id.getAttribute(this.EXPANDID))\n                }\n            });\n        });\n    }\n\n    /**\n     * Fetches JSON data\n     * \n     * @param {*} path  Path to json file\n     * @param {*} find  What id to look for\n     */\n     fetchJSONFile(path, find) {\n        const httpRequest = new XMLHttpRequest();\n        httpRequest.onreadystatechange = () => {\n            if (httpRequest.readyState === 4 || httpRequest.readyState === 0) {\n                if (httpRequest.status === 200) {\n                    const data = JSON.parse(httpRequest.responseText);\n\n                    this.findItems(data, find)\n                    return data;\n                }\n            }\n\n            return 0;\n        };\n        httpRequest.open('GET', path, true);\n        httpRequest.send(); \n    }\n    \n    /**\n     * Looks for a specific nav item\n     * @param {*} data Data to search through\n     * @param {*} find What id to look for\n     */\n    findItems(data, find) {\n        if (data.length > 0) {\n            return Object.keys(data).some((k) => {\n                if (data[k].id === find) {\n                    this.appendItems(data[k].list, data[k].id);\n    \n                    return 0; // return on direct found\n                }\n    \n                if (Array.isArray(data[k].list)) {\n                    return this.findItems(data[k].list, find); // return result of nested search\n                }\n\n                return 0;\n\n            });\n        }\n\n        // Data is empty. fetch from JSON file\n        this.fetchJSONFile('/assets/data/nav.json', find);\n        \n        return 0;\n    }\n\n    /**\n     * Appends each child item to the parent item.\n     * \n     * @param {*} list  List of items to be appended\n     * @param {*} id    Identifier for which element to append to.\n     */\n    appendItems(list, id) {\n        const target = document.querySelector(`[data-append-submenu=\"${id}\"]`);\n\n        list.forEach((item) => {\n            this.buildDOM(item)\n            target.appendChild(this.elm)\n            this.getSubitem(this.elm);\n            this.addTriggers(this.elm)\n        });\n    }\n\n    /**\n     * Builds a nav item dom object \n     * \n     * @param {*} item The item data to build the element based on\n     */\n    buildDOM(item) {\n        const uniqID = Math.random().toString(36).substr(2, 9);\n\n        const newLink = document.createElement(\"a\");\n        newLink.href = item.href\n\n        const newEl = document.createElement(\"div\");\n        newEl.className = \"c-navbar__item\";\n\n        // Build link element\n        const newSpan = document.createElement(\"span\");\n        newSpan.appendChild(document.createTextNode(item.name))\n        \n        newEl.appendChild(newSpan);\n\n        if (item.list) {\n            // Item has children\n            // Build toggle elements\n            const newTgl = document.createElement(\"div\");\n            newTgl.className = \"c-navbar__toggle\";\n\n            const newBtn = document.createElement(\"button\");\n            newBtn.className = \"c-button c-button__icon\";\n\n            newBtn.setAttribute('js-menu-trigger', 'c-navbar__subitem--expanded');\n            newBtn.setAttribute('js-menu-dart', uniqID);\n            newBtn.setAttribute('data-load-submenu', item.id);\n\n            const newLbl = document.createElement(\"span\");\n            newLbl.className = \"c-btn__label\";\n\n            const newIcon = document.createElement(\"i\");\n            newIcon.className = \"c-icon c-icon--color-primary c-icon--size-md material-icons\";\n            newIcon.appendChild(document.createTextNode(\"expand_more\"))\n\n            // Append Icon elemetns\n            newLbl.appendChild(newIcon);\n            newBtn.appendChild(newLbl);\n            newTgl.appendChild(newBtn);\n\n            // Append element\n            newEl.appendChild(newTgl);\n\n            const newSubItem = document.createElement(\"div\");\n            newSubItem.className = \"c-navbar__subitem\"\n            newSubItem.setAttribute('js-menu-target', uniqID);\n            newSubItem.setAttribute('data-append-submenu', item.id);\n\n            newEl.appendChild(newSubItem);\n        }\n\n        newLink.appendChild(newEl)\n\n        this.elm = newLink;\n    }\n}\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/menu.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/modal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/modal.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gallery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gallery */ \"./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js\");\n\n\nclass Modal {\n\n    constructor() {\n\n        this.modalId = null;\n        this.openTrigger = document.querySelectorAll(\"[data-open]\");\n        this.closeTrigger = document.querySelectorAll(\"[data-close]\");\n        this.isVisible = \"c-modal__bg--is-visible\";\n    }\n\n    /**\n     * Enable Modal\n     */\n    enableModals() {\n\n        const self = this;\n        // Gallery\n        let GalleryInstance = new _gallery__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n        GalleryInstance.enableGallery(this.modalId);\n\n        for(const trigger of this.openTrigger) {\n            trigger.addEventListener(\"click\", function() {\n                this.modalId = this.getAttribute('data-open'); //this.dataset.open;\n                document.getElementById(this.modalId).classList.add(self.isVisible);\n\n                if(this.getAttribute('data-large-img')) {\n                    GalleryInstance.initImage(this.modalId, this.getAttribute('data-large-img'));\n                }\n\n                self.lockScroll();\n            });\n        }\n\n        // Close\n        for (const trigger of this.closeTrigger) {\n            trigger.addEventListener(\"click\", function() {\n                document.querySelector(`.${self.isVisible}`).classList.remove(self.isVisible);\n                self.unlockScroll();\n            });\n        }\n\n        // Click outside modal\n        document.addEventListener(\"click\", e => {\n            if (e.target === document.querySelector(`.${self.isVisible}`)) {\n                document.querySelector(`.${self.isVisible}`).classList.remove(self.isVisible);\n                self.unlockScroll();\n            }\n        });\n\n        // Pressing Esc key to close modal\n        document.addEventListener(\"keyup\", e => {\n            if (e.key === \"Escape\" && document.querySelector(`.${self.isVisible}`)) {\n                document.querySelector(`.${self.isVisible}`).classList.remove(self.isVisible);\n                self.unlockScroll();\n            }\n        });\n    }\n\n    /**\n     * Lock scroll\n     * @returns {*}\n     */\n    lockScroll() {\n        const overflowHidden = \"u-overflow--hidden\";\n        document.querySelector(`body`).classList.add(overflowHidden);\n    }\n\n    /**\n     * Unlock scroll\n     * @returns {*}\n     */\n    unlockScroll() {\n        const overflowHidden = \"u-overflow--hidden\";\n        document.querySelector(`body`).classList.remove(overflowHidden);\n    }\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Modal);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/modal.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/notification.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/notification.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Notification{\n    setup(){\n        const containers = document.getElementsByClassName('c-notification__container');\n\n        if(containers){\n            containers.forEach(container => {\n                const direction = container.getAttribute('direction');\n                const directionClass = 'c-notification__container--' + direction;\n                container.classList.add(directionClass);\n                this.setOnClickClose(container);\n            });\n        }\n        \n    }\n\n    removeFirst(target){\n        const notifications = target.querySelectorAll('.c-notification');\n        const maxAmount = target.getAttribute('maxamount');\n        if(notifications.length > maxAmount){\n            notifications[0].outerHTML = '';\n        } \n    }\n\n    setOnClickClose(targetNode){\n        let count = 0;\n        const observerOptions = {\n        childList: true\n        }\n        const observer = new MutationObserver((event)=>{\n            count++;\n            this.removeFirst(targetNode);\n            event.forEach((record)=>{\n                record.addedNodes.forEach((node) =>{\n                    if(node.classList.contains('c-notification')){\n                        this.setAutoHideDuration(node);\n                        node.addEventListener('click', ()=>{\n                            node.classList.add('c-notification--dying--'+ count)\n                            node.outerHTML = '';\n                        })\n                    }\n                })\n            })\n            \n        });\n        observer.observe(targetNode, observerOptions);\n    }\n\n    setAutoHideDuration(notification){\n        const autoHideDuration = notification.getAttribute('autoHideDuration');\n        setTimeout(function(){ notification.outerHTML = \"\"; }, autoHideDuration);\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Notification);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/notification.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass NotificationDoc{\n    addListener(){\n         \n        const notificationButton = document.getElementsByClassName(\"notification__button\")[0];\n        const notification = document.getElementsByClassName(\"c-notification\")[0];\n\n        if(notification)\n        {\n            const direction = notification.getAttribute('direction');\n            let container = document.createElement('DIV');\n            container.classList.add('c-notification__container');\n            container.classList.add('c-notification__container--' + direction);\n            container.setAttribute('maxAmount', 3)\n            document.body.appendChild(container);\n\n            notificationButton.addEventListener('click', ()=>{\n                let notificationCopy = notification.cloneNode(true);\n                notificationCopy.classList.remove('u-display--none');\n                \n                container.appendChild(notificationCopy);\n            })\n        }\n        \n            \n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (NotificationDoc);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/polyfill.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/polyfill.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (\"NodeList\" in window && !NodeList.prototype.forEach) {\n    console.info(\"polyfill for IE11\");\n    NodeList.prototype.forEach = function(callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function(callback, thisArg) {\n        thisArg = thisArg || window;\n\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n\nif (!Object.prototype.forEach) {\n    Object.defineProperty(Object.prototype, \"forEach\", {\n        value: function(callback, thisArg) {\n            if (this == null) {\n                throw new TypeError(\"Not an object\");\n            }\n\n            thisArg = thisArg || window;\n            for (var key in this) {\n                if (this.hasOwnProperty(key)) {\n                callback.call(thisArg, this[key], key, this);\n                }\n            }\n        }\n    });\n}\n\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/polyfill.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/ripple.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/ripple.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst rippleObject = document.querySelectorAll(\".ripple\");\n\nrippleObject.forEach(link => link.addEventListener(\"click\", function(e) {\n\n    //Remove previous animation (if running)\n    this.classList.remove(\"ripple--is-animating\");\n\n    //Get bounding element\n    const rect = this.getBoundingClientRect(); \n\n    //Get size\n    const size = Math.max(this.offsetHeight, this.offsetWidth);\n\n    //Set the css sizes\n    this.style.setProperty('--pos-x', (e.clientY - rect.y - size/2) + \"px\");\n    this.style.setProperty('--pos-y', (e.clientX - rect.x - size/2) + \"px\");\n    this.style.setProperty('--size', size + \"px\");\n\n    //Animate\n    this.classList.add(\"ripple--is-animating\");\n}));\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/ripple.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js":
/*!************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Sidebar; });\nclass Sidebar {\n    constructor() {\n        this.ATTR = \"js-sidebar\";\n        this.EXPAND = \"c-sidebar__item--is-expanded\";\n        this.EXPANDABLE = \"c-sidebar__subcontainer\";\n        this.ACTIVE = \"item-active\";\n        this.TRIGGER = \"js-sidebar-trigger\";\n    }\n\n    /**\n     * Finds all sidebars and applies appropriate classes and attributes on load\n     * @return {void}\n     */\n    applySidebar() {\n        const sb = document.querySelector(`[${this.ATTR}]`);\n        \n        if (sb) {\n            const activeItems = sb.querySelectorAll(`[${this.ACTIVE}=\"true\"]`);\n\n            if (activeItems.length > 0) {\n                activeItems.forEach((item) => {\n                    if (item.closest('.c-sidebar__subcontainer')) {\n                        item.closest('.c-sidebar__subcontainer').classList.add(this.EXPAND);\n                        const id = item.closest('.c-sidebar__subcontainer').getAttribute('js-toggle-item')\n                        sb.querySelector(`[js-toggle-trigger=\"${id}\"]`).setAttribute('aria-pressed', true)\n                    }\n                })\n            }\n            \n            this.addTriggers(sb);\n        }\n    }\n\n    /**\n     * Adds listeners to buttons\n     * @param {Object} sb The sidebar\n     */\n    addTriggers(sb) {\n        const sbTriggers = document.querySelectorAll(`[${this.TRIGGER}]`);\n\n        sbTriggers.forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                sb.classList.toggle('c-sidebar--collapsed');\n            })\n        });\n    }\n}\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/slider.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/slider.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Slider; });\n/* harmony import */ var _steppers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./steppers */ \"./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js\");\n/* eslint-disable no-unused-expressions */\n\n\n\nclass Slider {\n    constructor() {\n        this.CLASS = \"c-segment\";\n        this.ATTR = \"js-slider\";\n        this.BTN = \"js-slider-btn\";\n        this.INDEX = \"js-slider-index\";\n        this.INNER = \"js-slider-inner\";\n        this.STEP = \"data-step\";\n        this.StepperInstance = new _steppers__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    }\n\n    /**\n     * Finds all slides and attaches event listeners.\n     * @return {void}\n     */\n    applySliders() {\n        const sliders = document.querySelectorAll(`[${this.ATTR}]`);\n\n        if (sliders.length > 0) {\n            sliders.forEach((slider) => {\n                this.StepperInstance.enableStepper(\n                    'dots',\n                    slider.parentElement,\n                    this.getItemsLength(slider),\n                    true\n                );\n\n                slider.querySelectorAll(`[${this.BTN}]`).forEach((button) => {\n                    button.addEventListener('click', (e) => {\n                        this.clickedBtn(e, slider);\n                    });\n                })\n            })\n        }\n    }\n\n    /**\n     * Handles click on either next och previous button\n     * @param {Object} e The click event\n     * @param {Object} elm The slider element\n     */\n    clickedBtn(e, elm) {  \n        let newIndex;\n\n        if (e.target.closest(\"button\").getAttribute(this.BTN) === 'prev') {\n            newIndex = this.getCurrentIndex(elm) === 0 ? \n                this.getItemsLength(elm) -1 :\n                    this.getCurrentIndex(elm) -1;\n\n        } else if (e.target.closest(\"button\").getAttribute(this.BTN) === 'next') {\n            newIndex = this.getCurrentIndex(elm) <= (this.getItemsLength(elm) - 2) ?\n                this.getCurrentIndex(elm) +1 :\n                    0;\n        }\n\n        elm.setAttribute(this.INDEX, newIndex);\n        elm.setAttribute(this.STEP, newIndex);\n        this.StepperInstance.enableStepper(\n            'dots',\n            elm.parentElement,\n            this.getItemsLength(elm),\n            false\n        );\n        this.moveToIndex(elm);\n    }\n\n    /**\n     * Sets the appropriate styling to slide to the requested slide\n     * @param {Object} elm The slider element\n     */\n    moveToIndex(elm) {\n        /* eslint-disable-next-line */\n        elm.querySelector(`[${this.INNER}]`).style.transform =\n            `translateX(-${elm.getAttribute(this.INDEX)}00%)`;\n    }\n\n    /**\n     * Returns the current index of the slider component\n     * @param {Object} elm The slider element\n     * @return {Int} The current index\n     */\n    getCurrentIndex(elm) {\n        return parseInt(elm.getAttribute(this.INDEX), 10)\n    }\n\n    /**\n     * Returns how many slides are present inside the the slider.\n     * Starts at 1.\n     * @param {Object} elm \n     * @return {Int} The amount of slides\n     */\n    getItemsLength(elm) {\n        return elm.getElementsByClassName(this.CLASS).length\n    }\n}\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/slider.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/sort.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/sort.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\nclass Sort {\n\n    constructor() {\n        this.CONTAINER = 'js-sort-container';\n        this.BUTTON = 'js-sort-button';\n        this.SORTABLE = 'js-sort-sortable';\n        this.ORDER = 'js-sort-order';\n        this.DATA = 'js-sort-data';\n        this.DATACONTAINER = 'js-sort-data-container';\n        this.INITIAL = 'js-sort-initial';\n    }\n\n    compare(a, b) {\n        return a.data.toLowerCase().localeCompare(b.data.toLowerCase());\n    }\n\n    appendSortable(container, dataId, initialSort = false) {\n        let sorted = [];\n        let sortOrder = container.getAttribute(this.ORDER);\n        let sortData = container.querySelectorAll(`[${this.DATA}=\"${dataId}\"]`);\n        let comparableData = [...sortData].map((data) => {\n            return { data: data.innerText, index: data.closest(`[${this.SORTABLE}]`) }\n        });\n        \n        if (sortOrder === 'asc' || (initialSort && initialSort === 'asc')) {\n            sorted = comparableData.sort(this.compare);\n            container.setAttribute(this.ORDER, \"desc\");\n        } else if(initialSort && initialSort === 'desc') {\n            comparableData.sort(this.compare);\n            sorted = comparableData.reverse(this.compare);\n            container.setAttribute(this.ORDER, 'asc');\n        } else {\n            sorted = comparableData.reverse(this.compare);\n            container.setAttribute(this.ORDER, \"asc\");\n        }\n\n        sorted.forEach(sort => {\n            sort.index.closest(`[${this.DATACONTAINER}]`).appendChild(sort.index);\n        });\n    }\n\n    applySort() {\n        const sortContainers = document.querySelectorAll(`[${this.CONTAINER}]`);\n\n        sortContainers.forEach(container => {\n            const sortButtons = container.querySelectorAll(`[${this.BUTTON}]`);\n            sortButtons.forEach((button) => {\n\n                let dataId = button.getAttribute(this.BUTTON);\n                let initialSort = container.getAttribute(this.INITIAL)\n\n                if(initialSort){\n                    container.setAttribute(this.ORDER, initialSort)\n                    this.appendSortable(container, dataId, initialSort);\n                }\n                button.addEventListener('click', (event) => {\n                    this.appendSortable(container, dataId);\n                });\n            });\n        });\n    }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sort);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/sort.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass SplitButton{\n    constructor(){\n        this.SPLIT = 'js-split';\n        this.DROPDOWNLISTVISIBLE = 'c-dropdown__list--visible';\n    }\n\n    syncSplitButton(){\n        const splitButtons = document.querySelectorAll(`[${this.SPLIT}]`);\n\n\n        splitButtons.forEach((splitButton)=> {\n            let buttons = splitButton.getElementsByClassName('c-button');\n            let actionButton = buttons[0];\n            let dropDownList = splitButton.getElementsByClassName('c-dropdown__list')[0];\n            let listItems = dropDownList.getElementsByTagName('li');\n\n            for(let item of listItems){\n                item.addEventListener('click', () => {\n                    actionButton.innerText = item.innerText;\n                }) \n            }   \n        });\n        \n        \n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SplitButton);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Component Steppers\n */\n\nclass Steppers {\n\n    constructor() {\n        this.dataSteps = null;\n        this.stepperLength = null;\n        this.modalId = null;\n        this.container = null;\n    }\n\n    /**\n     * Enable and init Steppers\n     */\n    enableStepper(stepperType, container, stepperLength, generate) {\n        const self = this;\n        this.container = container;\n        this.stepperLength = stepperLength;\n\n        switch (stepperType) {\n            case 'dots':\n                setTimeout(function () {\n                    self.dots(generate);\n                }, 500);\n                break;\n        }\n    }\n\n\n    /**\n     * Steppers - Dots\n     * @param generate\n     */\n    dots(generate) {\n\n        if (generate) {\n\n            if (this.container.querySelector('.c-steppers--type-dots').childElementCount !== 0) {\n                this.container.querySelector('.c-steppers__dot').innerHTML = \"\";\n            } else {\n                for (let int = 0; int < this.stepperLength; int++) {\n                    this.container.querySelector('.c-steppers--type-dots').insertAdjacentHTML(\"beforeend\",\n                        '<i class=\"c-steppers__dot c-steppers__dot-' + int + '\"></i>');\n                }\n            }\n        }\n\n        for (let removeDot of this.container.querySelectorAll('.c-steppers__dot')) {\n            if (removeDot.classList.contains('c-steppers__dot-active')) {\n                removeDot.classList.remove('c-steppers__dot-active');\n            }\n        }\n\n        let activeStep = this.container.querySelector('[data-step]').getAttribute('data-step');\n        this.container.querySelector('.c-steppers__dot-' + activeStep + '').classList.add('c-steppers__dot-active');\n    }\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Steppers);\n\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var Translator = (function () {\n        function Translator() {\n            this.dayOfWeekTranslations = [\n                'Su',\n                'Mo',\n                'Tu',\n                'We',\n                'Th',\n                'Fr',\n                'Sa',\n            ];\n            this.monthTranslations = [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December',\n            ];\n        }\n        Translator.prototype.setDayOfWeekTranslation = function (dayOfWeek, translation) {\n            this.dayOfWeekTranslations[TheDatepicker.Helper.checkNumber('First day of week', dayOfWeek, 0, 6)] = TheDatepicker.Helper.checkString('Translation', translation);\n        };\n        Translator.prototype.setMonthTranslation = function (month, translation) {\n            this.monthTranslations[TheDatepicker.Helper.checkNumber('Month', month, 0, 11)] = TheDatepicker.Helper.checkString('Translation', translation);\n        };\n        Translator.prototype.translateDayOfWeek = function (dayOfWeek) {\n            return this.dayOfWeekTranslations[dayOfWeek];\n        };\n        Translator.prototype.translateMonth = function (month) {\n            return this.monthTranslations[month];\n        };\n        return Translator;\n    }());\n    TheDatepicker.Translator = Translator;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var CannotParseDateException = (function () {\n        function CannotParseDateException() {\n        }\n        return CannotParseDateException;\n    }());\n    TheDatepicker.CannotParseDateException = CannotParseDateException;\n    var ParsedDateData = (function () {\n        function ParsedDateData() {\n            this.day = null;\n            this.month = null;\n            this.year = null;\n        }\n        ParsedDateData.prototype.createDate = function () {\n            if (this.day === null || this.month === null || this.year === null) {\n                throw new CannotParseDateException();\n            }\n            var date = new Date(this.year, this.month - 1, this.day);\n            if (isNaN(date.getTime())) {\n                throw new CannotParseDateException();\n            }\n            while (date.getDate() !== this.day || date.getMonth() !== this.month - 1 || date.getFullYear() !== this.year) {\n                if (this.day > 28) {\n                    this.day--;\n                    date = new Date(this.year, this.month - 1, this.day);\n                }\n                else {\n                    throw new CannotParseDateException();\n                }\n            }\n            return date;\n        };\n        return ParsedDateData;\n    }());\n    var DateConverter = (function () {\n        function DateConverter(options) {\n            this.options = options;\n            this.escapeChar = '\\\\';\n        }\n        DateConverter.prototype.formatDate = function (format, date) {\n            var escapeNext = false;\n            var result = '';\n            for (var position = 0; position < format.length; position++) {\n                var char = format.substring(position, position + 1);\n                if (escapeNext) {\n                    result += char;\n                    escapeNext = false;\n                    continue;\n                }\n                if (char === this.escapeChar) {\n                    escapeNext = true;\n                    continue;\n                }\n                var formatter = this.getFormatter(char);\n                if (formatter !== null) {\n                    result += formatter.call(this, date);\n                    continue;\n                }\n                result += char;\n            }\n            return result;\n        };\n        DateConverter.prototype.parseDate = function (format, text) {\n            if (text === '') {\n                return null;\n            }\n            var dateData = new ParsedDateData();\n            var escapeNext = false;\n            var textPosition = 0;\n            for (var position = 0; position < format.length; position++) {\n                var char = format.substring(position, position + 1);\n                if (escapeNext) {\n                    escapeNext = false;\n                }\n                else if (char === this.escapeChar) {\n                    escapeNext = true;\n                    continue;\n                }\n                else {\n                    var parser = this.getParser(char);\n                    if (parser !== null) {\n                        try {\n                            textPosition += parser.call(this, text.substring(textPosition), dateData);\n                        }\n                        catch (error) {\n                            if (!(error instanceof CannotParseDateException)) {\n                                throw error;\n                            }\n                            var textChar_1 = text.substring(textPosition, textPosition + 1);\n                            if (textChar_1 === ' ') {\n                                textPosition++;\n                                position--;\n                                continue;\n                            }\n                            else {\n                                throw error;\n                            }\n                        }\n                        continue;\n                    }\n                }\n                var textChar = text.substring(textPosition, textPosition + 1);\n                if (textChar !== char) {\n                    if (char === ' ') {\n                        continue;\n                    }\n                    if (textChar === ' ') {\n                        textPosition++;\n                        position--;\n                        continue;\n                    }\n                    throw new CannotParseDateException();\n                }\n                textPosition++;\n            }\n            return dateData.createDate();\n        };\n        DateConverter.prototype.getFormatter = function (type) {\n            switch (type) {\n                case 'j':\n                    return this.formatDay;\n                case 'd':\n                    return this.formatDayWithLeadingZero;\n                case 'D':\n                    return this.formatDayOfWeekTextual;\n                case 'n':\n                    return this.formatMonth;\n                case 'm':\n                    return this.formatMonthWithLeadingZero;\n                case 'F':\n                    return this.formatMonthTextual;\n                case 'Y':\n                    return this.formatYear;\n                case 'y':\n                    return this.formatYearTwoDigits;\n                default:\n                    return null;\n            }\n        };\n        DateConverter.prototype.formatDay = function (date) {\n            return date.getDate() + '';\n        };\n        DateConverter.prototype.formatDayWithLeadingZero = function (date) {\n            return ('0' + date.getDate()).slice(-2);\n        };\n        DateConverter.prototype.formatDayOfWeekTextual = function (date) {\n            return this.options.translator.translateDayOfWeek(date.getDay());\n        };\n        DateConverter.prototype.formatMonth = function (date) {\n            return (date.getMonth() + 1) + '';\n        };\n        DateConverter.prototype.formatMonthWithLeadingZero = function (date) {\n            return ('0' + (date.getMonth() + 1)).slice(-2);\n        };\n        DateConverter.prototype.formatMonthTextual = function (date) {\n            return this.options.translator.translateMonth(date.getMonth());\n        };\n        DateConverter.prototype.formatYear = function (date) {\n            return date.getFullYear() + '';\n        };\n        DateConverter.prototype.formatYearTwoDigits = function (date) {\n            var year = date.getFullYear() + '';\n            return year.substring(year.length - 2);\n        };\n        DateConverter.prototype.getParser = function (type) {\n            switch (type) {\n                case 'j':\n                case 'd':\n                    return this.parseDay;\n                case 'D':\n                    return this.parseDayOfWeekTextual;\n                case 'n':\n                case 'm':\n                    return this.parseMonth;\n                case 'F':\n                    return this.parseMonthTextual;\n                case 'Y':\n                    return this.parseYear;\n                case 'y':\n                    return this.parseYearTwoDigits;\n                default:\n                    return null;\n            }\n        };\n        DateConverter.prototype.parseDay = function (text, dateData) {\n            var took = 0;\n            while (text.substring(0, 1) === '0') {\n                text = text.substring(1);\n                took++;\n            }\n            var day = text.substring(0, 2);\n            if (!/[12][0-9]|3[01]/.test(day)) {\n                day = day.substring(0, 1);\n                if (!/[1-9]/.test(day)) {\n                    throw new CannotParseDateException();\n                }\n            }\n            dateData.day = parseInt(day, 10);\n            return took + day.length;\n        };\n        DateConverter.prototype.parseDayOfWeekTextual = function (text) {\n            var maxLength = 0;\n            for (var dayOfWeek = 0; dayOfWeek < 7; dayOfWeek++) {\n                var translation = this.options.translator.translateDayOfWeek(dayOfWeek);\n                maxLength = Math.max(maxLength, translation.length);\n                if (text.substring(0, translation.length).toLowerCase() === translation.toLowerCase()) {\n                    return translation.length;\n                }\n            }\n            var took = 0;\n            while (/[a-zA-Z]/.test(text.substring(0, 1))) {\n                text = text.substring(1);\n                took++;\n                if (took === maxLength) {\n                    break;\n                }\n            }\n            return took;\n        };\n        DateConverter.prototype.parseMonth = function (text, dateData) {\n            var took = 0;\n            while (text.substring(0, 1) === '0') {\n                text = text.substring(1);\n                took++;\n            }\n            var month = text.substring(0, 2);\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = month.substring(0, 1);\n                if (!/[1-9]/.test(month)) {\n                    throw new CannotParseDateException();\n                }\n            }\n            dateData.month = parseInt(month, 10);\n            return took + month.length;\n        };\n        DateConverter.prototype.parseMonthTextual = function (text, dateData) {\n            for (var month = 1; month <= 12; month++) {\n                var translation = this.options.translator.translateMonth(month - 1);\n                if (text.substring(0, translation.length).toLowerCase() === translation.toLowerCase()) {\n                    dateData.month = month;\n                    return translation.length;\n                }\n            }\n            throw new CannotParseDateException();\n        };\n        DateConverter.prototype.parseYear = function (text, dateData) {\n            var isNegative = false;\n            if (text.substring(0, 1) === '-') {\n                isNegative = true;\n                text = text.substring(1);\n            }\n            var yearLength = 0;\n            while (/[0-9]/.test(text.substring(yearLength, yearLength + 1))) {\n                yearLength++;\n            }\n            if (yearLength === 0) {\n                throw new CannotParseDateException();\n            }\n            var year = parseInt(text.substring(0, yearLength), 10);\n            if (isNegative) {\n                year = -year;\n            }\n            dateData.year = year;\n            return yearLength + (isNegative ? 1 : 0);\n        };\n        DateConverter.prototype.parseYearTwoDigits = function (text, dateData) {\n            var yearEnd = text.substring(0, 2);\n            if (!/[0-9]{2}/.test(yearEnd)) {\n                throw new CannotParseDateException();\n            }\n            var currentYear = (this.options.getToday()).getFullYear() + '';\n            var yearBeginning = currentYear.substring(0, currentYear.length - 2);\n            dateData.year = parseInt(yearBeginning + yearEnd, 10);\n            return 2;\n        };\n        return DateConverter;\n    }());\n    TheDatepicker.DateConverter = DateConverter;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var InitializationPhase;\n    (function (InitializationPhase) {\n        InitializationPhase[InitializationPhase[\"Untouched\"] = 0] = \"Untouched\";\n        InitializationPhase[InitializationPhase[\"Waiting\"] = 1] = \"Waiting\";\n        InitializationPhase[InitializationPhase[\"Ready\"] = 2] = \"Ready\";\n        InitializationPhase[InitializationPhase[\"Initialized\"] = 3] = \"Initialized\";\n        InitializationPhase[InitializationPhase[\"Destroyed\"] = 4] = \"Destroyed\";\n    })(InitializationPhase || (InitializationPhase = {}));\n    var Datepicker = (function () {\n        function Datepicker(input, container, options) {\n            if (container === void 0) { container = null; }\n            if (options === void 0) { options = null; }\n            this.initializationPhase = InitializationPhase.Untouched;\n            this.inputListenerRemover = null;\n            this.listenerRemovers = [];\n            this.deselectElement = null;\n            if (input !== null && !TheDatepicker.Helper.isElement(input)) {\n                throw new Error('Input was expected to be null or an HTMLElement.');\n            }\n            if (container !== null && !TheDatepicker.Helper.isElement(container)) {\n                throw new Error('Container was expected to be null or an HTMLElement.');\n            }\n            if (input === null && container === null) {\n                throw new Error('At least one of input or container is mandatory.');\n            }\n            if (options !== null && !(options instanceof TheDatepicker.Options)) {\n                throw new Error('Options was expected to be an instance of Options');\n            }\n            this.document = document;\n            this.options = options !== null ? options.clone() : new TheDatepicker.Options();\n            var duplicateError = 'There is already a datepicker present on ';\n            this.isContainerExternal = container !== null;\n            if (container === null) {\n                container = this.createContainer();\n                if (input !== null) {\n                    input.parentNode.appendChild(container);\n                }\n            }\n            else {\n                if (typeof container.datepicker !== 'undefined') {\n                    throw new Error(duplicateError + 'container.');\n                }\n            }\n            if (input !== null) {\n                if (typeof input.datepicker !== 'undefined') {\n                    throw new Error(duplicateError + 'input.');\n                }\n                input.datepicker = this;\n                input.autocomplete = 'off';\n            }\n            container.datepicker = this;\n            this.input = input;\n            this.container = container;\n            this.dateConverter = new TheDatepicker.DateConverter(this.options);\n            this.viewModel = new TheDatepicker.ViewModel(this.options, this);\n            this.triggerReady(input);\n            this.triggerReady(container);\n        }\n        Datepicker.prototype.render = function () {\n            var _this = this;\n            switch (this.initializationPhase) {\n                case InitializationPhase.Destroyed:\n                    return;\n                case InitializationPhase.Initialized:\n                    this.viewModel.render();\n                    return;\n                case InitializationPhase.Ready:\n                    this.initListeners();\n                    this.initializationPhase = InitializationPhase.Initialized;\n                    this.render();\n                    return;\n                case InitializationPhase.Waiting:\n                    if (!this.options.isHiddenOnBlur()) {\n                        this.open();\n                        return;\n                    }\n                    this.viewModel.selectPossibleDate();\n                    this.updateDeselectButton();\n                    return;\n                case InitializationPhase.Untouched:\n                    this.preselectFromInput();\n                    this.createDeselectElement();\n                    this.viewModel.selectInitialDate(null);\n                    this.updateInput();\n                    if (this.input !== null && this.options.isHiddenOnBlur()) {\n                        if (this.input === this.document.activeElement) {\n                            this.initializationPhase = InitializationPhase.Ready;\n                            this.render();\n                            this.open();\n                            return;\n                        }\n                        this.inputListenerRemover = TheDatepicker.Helper.addEventListener(this.input, TheDatepicker.ListenerType.Focus, function (event) {\n                            _this.open(event);\n                        });\n                        this.initializationPhase = InitializationPhase.Waiting;\n                        return;\n                    }\n                    this.initializationPhase = InitializationPhase.Ready;\n                    this.render();\n            }\n        };\n        Datepicker.prototype.open = function (event) {\n            if (event === void 0) { event = null; }\n            if (this.initializationPhase === InitializationPhase.Untouched) {\n                this.render();\n            }\n            if (this.initializationPhase === InitializationPhase.Waiting) {\n                this.initializationPhase = InitializationPhase.Ready;\n                this.render();\n                Datepicker.hasClickedViewModel = true;\n            }\n            if (!Datepicker.activateViewModel(event, this)) {\n                return false;\n            }\n            if (this.input !== null) {\n                this.input.focus();\n            }\n            return true;\n        };\n        Datepicker.prototype.close = function (event) {\n            if (event === void 0) { event = null; }\n            if (!this.viewModel.isActive()) {\n                return true;\n            }\n            if (!Datepicker.activateViewModel(event, null)) {\n                return false;\n            }\n            if (this.input !== null) {\n                this.input.blur();\n            }\n            return true;\n        };\n        Datepicker.prototype.reset = function (event) {\n            if (event === void 0) { event = null; }\n            return this.viewModel.reset(event);\n        };\n        Datepicker.prototype.destroy = function () {\n            if (this.initializationPhase === InitializationPhase.Destroyed) {\n                return;\n            }\n            for (var index = 0; index < this.listenerRemovers.length; index++) {\n                this.listenerRemovers[index]();\n            }\n            this.listenerRemovers = [];\n            if (this.isContainerExternal) {\n                this.container.innerHTML = '';\n            }\n            else {\n                this.container.parentNode.removeChild(this.container);\n            }\n            this.container.datepicker = null;\n            if (this.input !== null) {\n                this.input.datepicker = null;\n                this.removeInitialInputListener();\n                this.input = null;\n            }\n            if (this.deselectElement !== null) {\n                this.deselectElement.parentNode.removeChild(this.deselectElement);\n                this.deselectElement = null;\n            }\n            this.initializationPhase = InitializationPhase.Destroyed;\n        };\n        Datepicker.prototype.selectDate = function (date, doUpdateMonth, event) {\n            if (doUpdateMonth === void 0) { doUpdateMonth = true; }\n            if (event === void 0) { event = null; }\n            return this.viewModel.selectDay(event, TheDatepicker.Helper.normalizeDate('Date', date, this.options), doUpdateMonth);\n        };\n        Datepicker.prototype.getSelectedDate = function () {\n            return this.viewModel.selectedDate !== null ? new Date(this.viewModel.selectedDate.getTime()) : null;\n        };\n        Datepicker.prototype.getCurrentMonth = function () {\n            return this.viewModel.getCurrentMonth();\n        };\n        Datepicker.prototype.goToMonth = function (month, event) {\n            if (event === void 0) { event = null; }\n            return this.viewModel.goToMonth(event, TheDatepicker.Helper.normalizeDate('Month', month, this.options));\n        };\n        Datepicker.prototype.parseRawInput = function () {\n            return this.dateConverter.parseDate(this.options.getInputFormat(), this.input.value);\n        };\n        Datepicker.prototype.readInput = function (event) {\n            if (event === void 0) { event = null; }\n            if (this.input === null) {\n                return false;\n            }\n            try {\n                var date = this.parseRawInput();\n                if (date !== null) {\n                    return this.viewModel.selectNearestDate(event, date);\n                }\n                return this.viewModel.cancelSelection(event);\n            }\n            catch (error) {\n                if (!(error instanceof TheDatepicker.CannotParseDateException)) {\n                    throw error;\n                }\n                return false;\n            }\n        };\n        Datepicker.prototype.updateInput = function () {\n            if (this.input === null || this.input === this.document.activeElement) {\n                return;\n            }\n            this.input.value = this.viewModel.selectedDate !== null\n                ? this.dateConverter.formatDate(this.options.getInputFormat(), this.viewModel.selectedDate)\n                : '';\n            this.updateDeselectButton();\n        };\n        Datepicker.onDatepickerReady = function (element, callback) {\n            if (callback === void 0) { callback = null; }\n            var promise = null;\n            var promiseResolve = null;\n            if (typeof Promise !== 'undefined') {\n                promise = new Promise(function (resolve) {\n                    promiseResolve = resolve;\n                });\n            }\n            if (typeof element.datepicker !== 'undefined' && element.datepicker instanceof Datepicker) {\n                element.datepicker.triggerReadyListener(callback, element);\n                if (promiseResolve !== null) {\n                    promiseResolve(element.datepicker);\n                }\n            }\n            else {\n                Datepicker.readyListeners.push({\n                    promiseResolve: promiseResolve,\n                    element: element,\n                    callback: callback\n                });\n            }\n            return promise;\n        };\n        ;\n        Datepicker.prototype.createContainer = function () {\n            var container = this.document.createElement('div');\n            container.className = this.options.getClassesPrefix() + 'container';\n            container.style.position = 'absolute';\n            container.style.zIndex = '99';\n            return container;\n        };\n        Datepicker.prototype.createDeselectElement = function () {\n            var _this = this;\n            if (this.input === null || !this.options.isDeselectButtonShown()) {\n                return null;\n            }\n            var deselectElement = this.document.createElement('span');\n            deselectElement.style.position = 'absolute';\n            var deselectButton = this.document.createElement('a');\n            deselectButton.innerHTML = this.options.getDeselectHtml();\n            deselectButton.style.position = 'relative';\n            deselectButton.href = '#';\n            deselectButton.onclick = function (event) {\n                event = event || window.event;\n                TheDatepicker.Helper.preventDefault(event);\n                _this.viewModel.cancelSelection(event);\n            };\n            deselectElement.className = this.options.getClassesPrefix() + 'deselect';\n            deselectButton.className = this.options.getClassesPrefix() + 'deselect-button';\n            deselectElement.appendChild(deselectButton);\n            this.input.parentNode.appendChild(deselectElement);\n            this.deselectElement = deselectElement;\n        };\n        Datepicker.prototype.updateDeselectButton = function () {\n            if (this.input !== null && this.deselectElement !== null) {\n                var isVisible = this.options.isDeselectButtonShown() && this.input.value !== '';\n                this.deselectElement.style.visibility = isVisible ? 'visible' : 'hidden';\n            }\n        };\n        Datepicker.prototype.preselectFromInput = function () {\n            if (this.input !== null) {\n                try {\n                    var date = this.parseRawInput();\n                    if (date !== null) {\n                        this.options.setInitialDate(date);\n                    }\n                }\n                catch (error) {\n                    if (!(error instanceof TheDatepicker.CannotParseDateException)) {\n                        throw error;\n                    }\n                }\n            }\n        };\n        Datepicker.prototype.initListeners = function () {\n            var _this = this;\n            if (!Datepicker.areGlobalListenersInitialized) {\n                var activeViewModel = null;\n                var checkMiss = function (event) {\n                    if (Datepicker.hasClickedViewModel) {\n                        Datepicker.hasClickedViewModel = false;\n                    }\n                    else {\n                        Datepicker.activateViewModel(event, null);\n                    }\n                };\n                TheDatepicker.Helper.addEventListener(this.document, TheDatepicker.ListenerType.MouseDown, checkMiss);\n                TheDatepicker.Helper.addEventListener(this.document, TheDatepicker.ListenerType.FocusIn, checkMiss);\n                TheDatepicker.Helper.addEventListener(this.document, TheDatepicker.ListenerType.KeyDown, function (event) {\n                    if (Datepicker.activeViewModel !== null) {\n                        Datepicker.activeViewModel.triggerKeyPress(event);\n                    }\n                });\n                Datepicker.areGlobalListenersInitialized = true;\n            }\n            this.removeInitialInputListener();\n            var hit = function (event) {\n                Datepicker.activateViewModel(event, _this);\n                Datepicker.hasClickedViewModel = true;\n            };\n            this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.container, TheDatepicker.ListenerType.MouseDown, hit));\n            this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.container, TheDatepicker.ListenerType.FocusIn, hit));\n            if (this.deselectElement !== null) {\n                this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.deselectElement, TheDatepicker.ListenerType.MouseDown, hit));\n                this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.deselectElement, TheDatepicker.ListenerType.FocusIn, hit));\n            }\n            if (this.input !== null) {\n                this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.input, TheDatepicker.ListenerType.MouseDown, hit));\n                this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.input, TheDatepicker.ListenerType.Focus, hit));\n                this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.input, TheDatepicker.ListenerType.Blur, function () {\n                    _this.updateInput();\n                }));\n                this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.input, TheDatepicker.ListenerType.KeyDown, function (event) {\n                    TheDatepicker.Helper.stopPropagation(event);\n                }));\n                this.listenerRemovers.push(TheDatepicker.Helper.addEventListener(this.input, TheDatepicker.ListenerType.KeyUp, function (event) {\n                    _this.readInput(event);\n                }));\n            }\n        };\n        Datepicker.prototype.removeInitialInputListener = function () {\n            if (this.inputListenerRemover !== null) {\n                this.inputListenerRemover();\n                this.inputListenerRemover = null;\n            }\n        };\n        Datepicker.prototype.triggerReady = function (element) {\n            for (var index = Datepicker.readyListeners.length - 1; index >= 0; index--) {\n                var listener = Datepicker.readyListeners[index];\n                if (listener.element === element) {\n                    this.triggerReadyListener(listener.callback, element);\n                    if (listener.promiseResolve !== null) {\n                        listener.promiseResolve(this);\n                    }\n                    Datepicker.readyListeners.splice(index, 1);\n                }\n            }\n        };\n        Datepicker.prototype.triggerReadyListener = function (callback, element) {\n            if (callback !== null) {\n                callback.call(element, this, element);\n            }\n        };\n        Datepicker.prototype.fixPosition = function () {\n            if (this.isContainerExternal || !this.options.isPositionFixingEnabled()) {\n                return;\n            }\n            var windowTop = window.pageYOffset || this.document.documentElement.scrollTop;\n            var windowHeight = window.innerHeight || Math.max(this.document.documentElement.clientHeight, this.document.body.clientHeight);\n            var windowBottom = windowTop + windowHeight;\n            var inputTop = 0;\n            var parentElement = this.input;\n            while (parentElement !== null && !isNaN(parentElement.offsetLeft) && !isNaN(parentElement.offsetTop)) {\n                inputTop += parentElement.offsetTop - parentElement.scrollTop;\n                parentElement = parentElement.offsetParent;\n            }\n            var inputBottom = inputTop + this.input.offsetHeight;\n            var containerHeight = this.container.offsetHeight;\n            var locationClass = '';\n            var locateOver = inputTop - windowTop > containerHeight && windowBottom - inputBottom < containerHeight;\n            if (locateOver) {\n                locationClass = ' ' + this.options.getClassesPrefix() + 'container--over';\n            }\n            this.container.className = this.options.getClassesPrefix() + 'container' + locationClass;\n            var childNodes = this.container.childNodes;\n            if (childNodes.length > 0) {\n                var child = childNodes[0];\n                if (locateOver) {\n                    var move = this.input.offsetHeight + this.container.offsetHeight;\n                    child.style.position = 'relative';\n                    child.style.top = '-' + move + 'px';\n                }\n                else {\n                    child.style.position = '';\n                    child.style.top = '';\n                }\n            }\n        };\n        Datepicker.activateViewModel = function (event, datepicker) {\n            var viewModel = datepicker !== null ? datepicker.viewModel : null;\n            var activeViewModel = Datepicker.activeViewModel;\n            if (activeViewModel === viewModel) {\n                return true;\n            }\n            if (activeViewModel !== null && !activeViewModel.setActive(event, false)) {\n                return false;\n            }\n            if (Datepicker.activeViewModel !== activeViewModel) {\n                return true;\n            }\n            if (viewModel === null) {\n                Datepicker.activeViewModel = null;\n                return true;\n            }\n            if (!viewModel.setActive(event, true)) {\n                return false;\n            }\n            if (Datepicker.activeViewModel !== activeViewModel) {\n                return true;\n            }\n            datepicker.fixPosition();\n            Datepicker.activeViewModel = viewModel;\n            return true;\n        };\n        Datepicker.readyListeners = [];\n        Datepicker.areGlobalListenersInitialized = false;\n        Datepicker.activeViewModel = null;\n        Datepicker.hasClickedViewModel = false;\n        return Datepicker;\n    }());\n    TheDatepicker.Datepicker = Datepicker;\n    TheDatepicker.onDatepickerReady = Datepicker.onDatepickerReady;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var Day = (function () {\n        function Day(date) {\n            this.isToday = false;\n            this.isPast = false;\n            this.isAvailable = true;\n            this.isInValidity = true;\n            this.isVisible = true;\n            this.isInCurrentMonth = true;\n            this.isSelected = false;\n            this.isHighlighted = false;\n            this.isFocused = false;\n            this.dayNumber = date.getDate();\n            this.month = date.getMonth() + 1;\n            this.year = date.getFullYear();\n            this.dayOfWeek = date.getDay();\n            this.isWeekend = this.dayOfWeek === TheDatepicker.DayOfWeek.Saturday || this.dayOfWeek === TheDatepicker.DayOfWeek.Sunday;\n        }\n        Day.prototype.getDate = function () {\n            return new Date(this.year, this.month - 1, this.dayNumber, 0, 0, 0, 0);\n        };\n        Day.prototype.getFormatted = function () {\n            return this.year + '-' + ('0' + this.month).slice(-2) + '-' + ('0' + this.dayNumber).slice(-2);\n        };\n        Day.prototype.isEqualToDate = function (date) {\n            return date !== null\n                && this.dayNumber === date.getDate()\n                && this.month === date.getMonth() + 1\n                && this.year === date.getFullYear();\n        };\n        Day.prototype.isEqualToDay = function (day) {\n            return day !== null\n                && this.dayNumber === day.dayNumber\n                && this.month === day.month\n                && this.year === day.year;\n        };\n        return Day;\n    }());\n    TheDatepicker.Day = Day;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var DayOfWeek;\n    (function (DayOfWeek) {\n        DayOfWeek[DayOfWeek[\"Monday\"] = 1] = \"Monday\";\n        DayOfWeek[DayOfWeek[\"Tuesday\"] = 2] = \"Tuesday\";\n        DayOfWeek[DayOfWeek[\"Wednesday\"] = 3] = \"Wednesday\";\n        DayOfWeek[DayOfWeek[\"Thursday\"] = 4] = \"Thursday\";\n        DayOfWeek[DayOfWeek[\"Friday\"] = 5] = \"Friday\";\n        DayOfWeek[DayOfWeek[\"Saturday\"] = 6] = \"Saturday\";\n        DayOfWeek[DayOfWeek[\"Sunday\"] = 0] = \"Sunday\";\n    })(DayOfWeek = TheDatepicker.DayOfWeek || (TheDatepicker.DayOfWeek = {}));\n    var Month;\n    (function (Month) {\n        Month[Month[\"January\"] = 0] = \"January\";\n        Month[Month[\"February\"] = 1] = \"February\";\n        Month[Month[\"March\"] = 2] = \"March\";\n        Month[Month[\"April\"] = 3] = \"April\";\n        Month[Month[\"May\"] = 4] = \"May\";\n        Month[Month[\"June\"] = 5] = \"June\";\n        Month[Month[\"July\"] = 6] = \"July\";\n        Month[Month[\"August\"] = 7] = \"August\";\n        Month[Month[\"September\"] = 8] = \"September\";\n        Month[Month[\"October\"] = 9] = \"October\";\n        Month[Month[\"November\"] = 10] = \"November\";\n        Month[Month[\"December\"] = 11] = \"December\";\n    })(Month = TheDatepicker.Month || (TheDatepicker.Month = {}));\n    var KeyCode;\n    (function (KeyCode) {\n        KeyCode[KeyCode[\"Enter\"] = 13] = \"Enter\";\n        KeyCode[KeyCode[\"Space\"] = 32] = \"Space\";\n        KeyCode[KeyCode[\"Left\"] = 37] = \"Left\";\n        KeyCode[KeyCode[\"Up\"] = 38] = \"Up\";\n        KeyCode[KeyCode[\"Right\"] = 39] = \"Right\";\n        KeyCode[KeyCode[\"Down\"] = 40] = \"Down\";\n    })(KeyCode = TheDatepicker.KeyCode || (TheDatepicker.KeyCode = {}));\n    var ListenerType;\n    (function (ListenerType) {\n        ListenerType[\"MouseDown\"] = \"mousedown\";\n        ListenerType[\"Focus\"] = \"focus\";\n        ListenerType[\"FocusIn\"] = \"focusin\";\n        ListenerType[\"Blur\"] = \"blur\";\n        ListenerType[\"KeyDown\"] = \"keydown\";\n        ListenerType[\"KeyUp\"] = \"keyup\";\n    })(ListenerType = TheDatepicker.ListenerType || (TheDatepicker.ListenerType = {}));\n    var Helper = (function () {\n        function Helper() {\n        }\n        Helper.resetTime = function (date) {\n            if (date === null) {\n                return null;\n            }\n            date.setHours(0);\n            date.setMinutes(0);\n            date.setSeconds(0);\n            date.setMilliseconds(0);\n            return date;\n        };\n        Helper.normalizeDate = function (parameterName, value, options) {\n            if (!value) {\n                return null;\n            }\n            if (value instanceof TheDatepicker.Day) {\n                return value.getDate();\n            }\n            if (typeof value === 'string') {\n                if (value === 'today' || value === 'now') {\n                    return options.getToday();\n                }\n                if (value === 'tomorrow') {\n                    var date_1 = options.getToday();\n                    date_1.setDate(date_1.getDate() + 1);\n                    return date_1;\n                }\n                if (value === 'yesterday') {\n                    var date_2 = options.getToday();\n                    date_2.setDate(date_2.getDate() - 1);\n                    return date_2;\n                }\n                var matches = value.match(/^\\s*([+-]?)\\s*([0-9]+)\\s*(day|month|year)s?\\s*$/i);\n                if (matches !== null) {\n                    var date_3 = options.getToday();\n                    var amount = parseInt(matches[2], 10) * (matches[1] === '-' ? -1 : 1);\n                    switch (matches[3].toLowerCase()) {\n                        case 'day':\n                        case 'days':\n                            date_3.setDate(date_3.getDate() + amount);\n                            break;\n                        case 'month':\n                        case 'months':\n                            date_3.setMonth(date_3.getMonth() + amount);\n                            break;\n                        case 'year':\n                        case 'years':\n                            date_3.setFullYear(date_3.getFullYear() + amount);\n                            break;\n                    }\n                    return date_3;\n                }\n                var date = new Date(value);\n                if (!isNaN(date.getTime())) {\n                    return Helper.resetTime(date);\n                }\n            }\n            else if (Helper.isValidDate(value)) {\n                return Helper.resetTime(new Date(value.getTime()));\n            }\n            throw new Error(parameterName + ' was expected to be a valid Date string or valid Date or Day or null.');\n        };\n        Helper.normalizeMonth = function (date) {\n            if (date === null) {\n                return null;\n            }\n            var month = new Date(date.getTime());\n            month.setDate(1);\n            return month;\n        };\n        Helper.isElement = function (element) {\n            return typeof element === 'object'\n                && element.nodeType === 1\n                && typeof element.style === 'object'\n                && typeof element.ownerDocument === 'object';\n        };\n        Helper.isValidDate = function (value) {\n            return typeof value === 'object'\n                && Object.prototype.toString.call(value) === '[object Date]'\n                && !isNaN(value.getTime());\n        };\n        Helper.inArray = function (list, item) {\n            for (var index = 0; index < list.length; index++) {\n                if (list[index] === item) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        Helper.addEventListener = function (element, listenerType, listener) {\n            if (element.addEventListener) {\n                element.addEventListener(listenerType, listener);\n                return function () {\n                    element.removeEventListener(listenerType, listener);\n                };\n            }\n            var listenerProperty = 'on' + listenerType;\n            var originalListener = element[listenerProperty] || null;\n            element[listenerProperty] = function (event) {\n                event = event || window.event;\n                if (originalListener !== null) {\n                    originalListener.call(element, event);\n                }\n                listener(event);\n            };\n            return function () {\n                element[listenerProperty] = originalListener;\n            };\n        };\n        Helper.preventDefault = function (event) {\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n        };\n        Helper.stopPropagation = function (event) {\n            if (event.stopPropagation) {\n                event.stopPropagation();\n            }\n            else {\n                event.cancelBubble = true;\n            }\n        };\n        Helper.checkString = function (parameterName, value, checkNonEmpty) {\n            if (checkNonEmpty === void 0) { checkNonEmpty = false; }\n            if (!checkNonEmpty && !value) {\n                return '';\n            }\n            if (typeof value !== 'string' || (checkNonEmpty && value === '')) {\n                throw new Error(parameterName + ' was expected to be a' + (checkNonEmpty ? ' non empty' : '') + ' string.');\n            }\n            return value;\n        };\n        Helper.checkNumber = function (parameterName, value, min, max) {\n            if (min === void 0) { min = null; }\n            if (max === void 0) { max = null; }\n            value = typeof value === 'string' ? parseInt(value) : value;\n            if (typeof value !== 'number' || isNaN(value) || (min !== null && value < min) || (max !== null && value > max)) {\n                throw new Error(parameterName + ' was expected to be a valid number' + (min !== null ? ' from ' + min : '') + (max !== null ? ' to ' + max : '') + '.');\n            }\n            return value;\n        };\n        Helper.checkFunction = function (parameterName, value, isNullable) {\n            if (isNullable === void 0) { isNullable = true; }\n            if (isNullable && !value) {\n                return null;\n            }\n            if (typeof value !== 'function') {\n                throw new Error(parameterName + ' was expected to be a function' + (isNullable ? ' or null' : '') + '.');\n            }\n            return value;\n        };\n        return Helper;\n    }());\n    TheDatepicker.Helper = Helper;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var HtmlHelper = (function () {\n        function HtmlHelper(options) {\n            this.options = options;\n            this.document = document;\n        }\n        HtmlHelper.prototype.createDiv = function (className) {\n            var div = this.document.createElement('div');\n            this.addClass(div, className);\n            return div;\n        };\n        HtmlHelper.prototype.createAnchor = function (onClick) {\n            var anchor = this.document.createElement('a');\n            this.addClass(anchor, 'button');\n            anchor.href = '#';\n            anchor.onclick = function (event) {\n                event = event || window.event;\n                TheDatepicker.Helper.preventDefault(event);\n                onClick(event);\n            };\n            anchor.onkeydown = function (event) {\n                event = event || window.event;\n                if (TheDatepicker.Helper.inArray([TheDatepicker.KeyCode.Enter, TheDatepicker.KeyCode.Space], event.keyCode)) {\n                    TheDatepicker.Helper.preventDefault(event);\n                    onClick(event);\n                }\n            };\n            return anchor;\n        };\n        HtmlHelper.prototype.createSpan = function () {\n            return this.document.createElement('span');\n        };\n        HtmlHelper.prototype.createTable = function (className, header, body) {\n            var table = this.document.createElement('table');\n            this.addClass(table, className);\n            table.appendChild(header);\n            table.appendChild(body);\n            return table;\n        };\n        HtmlHelper.prototype.createTableHeader = function (className, cells) {\n            var tableHeader = this.document.createElement('thead');\n            this.addClass(tableHeader, className);\n            var row = this.document.createElement('tr');\n            for (var index = 0; index < cells.length; index++) {\n                row.appendChild(cells[index]);\n            }\n            tableHeader.appendChild(row);\n            return tableHeader;\n        };\n        HtmlHelper.prototype.createTableHeaderCell = function (className) {\n            var cell = this.document.createElement('th');\n            cell.scope = 'col';\n            this.addClass(cell, className);\n            return cell;\n        };\n        HtmlHelper.prototype.createTableBody = function (className, rows) {\n            var tableBody = this.document.createElement('tbody');\n            this.addClass(tableBody, className);\n            for (var index = 0; index < rows.length; index++) {\n                tableBody.appendChild(rows[index]);\n            }\n            return tableBody;\n        };\n        HtmlHelper.prototype.createTableRow = function (className, cells) {\n            var row = this.document.createElement('tr');\n            for (var index = 0; index < cells.length; index++) {\n                row.appendChild(cells[index]);\n            }\n            return row;\n        };\n        HtmlHelper.prototype.createTableCell = function () {\n            return this.document.createElement('td');\n        };\n        HtmlHelper.prototype.createSelectInput = function (options, onChange) {\n            var input = this.document.createElement('select');\n            this.addClass(input, 'select');\n            for (var index = 0; index < options.length; index++) {\n                input.appendChild(this.createSelectOption(options[index].value, options[index].label));\n            }\n            input.onchange = function (event) {\n                onChange(event || window.event, input.value);\n            };\n            input.onkeydown = function (event) {\n                event = event || window.event;\n                TheDatepicker.Helper.stopPropagation(event);\n            };\n            return input;\n        };\n        HtmlHelper.prototype.createSelectOption = function (value, label) {\n            var option = this.document.createElement('option');\n            option.value = value;\n            option.innerText = label;\n            return option;\n        };\n        HtmlHelper.prototype.addClass = function (element, className) {\n            className = this.options.getClassesPrefix() + className;\n            if (element.className !== '') {\n                className = ' ' + className;\n            }\n            element.className += className;\n        };\n        return HtmlHelper;\n    }());\n    TheDatepicker.HtmlHelper = HtmlHelper;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var EventType;\n    (function (EventType) {\n        EventType[\"BeforeSelect\"] = \"beforeSelect\";\n        EventType[\"Select\"] = \"select\";\n        EventType[\"BeforeOpenAndClose\"] = \"beforeOpenAndClose\";\n        EventType[\"OpenAndClose\"] = \"openAndClose\";\n        EventType[\"MonthChange\"] = \"monthChange\";\n        EventType[\"BeforeMonthChange\"] = \"beforeMonthChange\";\n    })(EventType = TheDatepicker.EventType || (TheDatepicker.EventType = {}));\n    var AvailableDateNotFoundException = (function () {\n        function AvailableDateNotFoundException() {\n        }\n        return AvailableDateNotFoundException;\n    }());\n    TheDatepicker.AvailableDateNotFoundException = AvailableDateNotFoundException;\n    var Options = (function () {\n        function Options(translator) {\n            if (translator === void 0) { translator = null; }\n            this.hideOnBlur = true;\n            this.hideOnSelect = true;\n            this.minDate = null;\n            this.maxDate = null;\n            this.minMonth = null;\n            this.maxMonth = null;\n            this.initialDate = null;\n            this.initialMonth = null;\n            this.initialDatePriority = true;\n            this.firstDayOfWeek = TheDatepicker.DayOfWeek.Monday;\n            this.dateAvailabilityResolver = null;\n            this.cellContentResolver = null;\n            this.cellContentStructureResolver = null;\n            this.cellClassesResolver = null;\n            this.inputFormat = 'j. n. Y';\n            this.daysOutOfMonthVisible = false;\n            this.fixedRowsCount = false;\n            this.toggleSelection = false;\n            this.allowEmpty = true;\n            this.showDeselectButton = true;\n            this.showResetButton = false;\n            this.monthAsDropdown = true;\n            this.yearAsDropdown = true;\n            this.monthAndYearSeparated = true;\n            this.classesPrefix = 'c-datepicker__';\n            this.showCloseButton = true;\n            this.title = '';\n            this.dropdownItemsLimit = 200;\n            this.goBackHtml = '&lt;';\n            this.goForwardHtml = '&gt;';\n            this.closeHtml = '&times;';\n            this.resetHtml = '&olarr;';\n            this.deselectHtml = '&times;';\n            this.positionFixing = true;\n            this.today = null;\n            this.listeners = {\n                beforeSelect: [],\n                select: [],\n                beforeOpenAndClose: [],\n                openAndClose: [],\n                monthChange: [],\n                beforeMonthChange: []\n            };\n            this.translator = translator !== null ? translator : new TheDatepicker.Translator();\n            this.document = document;\n        }\n        Options.prototype.clone = function () {\n            var options = new Options(this.translator);\n            options.hideOnBlur = this.hideOnBlur;\n            options.hideOnSelect = this.hideOnSelect;\n            options.minDate = this.minDate;\n            options.maxDate = this.maxDate;\n            options.minMonth = this.minMonth;\n            options.maxMonth = this.maxMonth;\n            options.initialDate = this.initialDate;\n            options.initialMonth = this.initialMonth;\n            options.initialDatePriority = this.initialDatePriority;\n            options.firstDayOfWeek = this.firstDayOfWeek;\n            options.dateAvailabilityResolver = this.dateAvailabilityResolver;\n            options.cellContentResolver = this.cellContentResolver;\n            options.cellContentStructureResolver = this.cellContentStructureResolver;\n            options.cellClassesResolver = this.cellClassesResolver;\n            options.inputFormat = this.inputFormat;\n            options.daysOutOfMonthVisible = this.daysOutOfMonthVisible;\n            options.fixedRowsCount = this.fixedRowsCount;\n            options.toggleSelection = this.toggleSelection;\n            options.allowEmpty = this.allowEmpty;\n            options.showDeselectButton = this.showDeselectButton;\n            options.showResetButton = this.showResetButton;\n            options.monthAsDropdown = this.monthAsDropdown;\n            options.yearAsDropdown = this.yearAsDropdown;\n            options.monthAndYearSeparated = this.monthAndYearSeparated;\n            options.classesPrefix = this.classesPrefix;\n            options.showCloseButton = this.showCloseButton;\n            options.title = this.title;\n            options.dropdownItemsLimit = this.dropdownItemsLimit;\n            options.goBackHtml = this.goBackHtml;\n            options.goForwardHtml = this.goForwardHtml;\n            options.closeHtml = this.closeHtml;\n            options.resetHtml = this.resetHtml;\n            options.deselectHtml = this.deselectHtml;\n            options.positionFixing = this.positionFixing;\n            options.listeners.beforeSelect = this.listeners.beforeSelect.slice(0);\n            options.listeners.select = this.listeners.select.slice(0);\n            options.listeners.beforeOpenAndClose = this.listeners.beforeOpenAndClose.slice(0);\n            options.listeners.openAndClose = this.listeners.openAndClose.slice(0);\n            options.listeners.monthChange = this.listeners.monthChange.slice(0);\n            options.listeners.beforeMonthChange = this.listeners.beforeMonthChange.slice(0);\n            return options;\n        };\n        Options.prototype.setHideOnBlur = function (value) {\n            this.hideOnBlur = !!value;\n        };\n        Options.prototype.setHideOnSelect = function (value) {\n            this.hideOnSelect = !!value;\n        };\n        Options.prototype.setMinDate = function (date) {\n            var normalizedDate = TheDatepicker.Helper.normalizeDate('Min date', date, this);\n            this.checkConstraints(normalizedDate, this.maxDate);\n            this.minDate = normalizedDate;\n            this.minMonth = TheDatepicker.Helper.normalizeMonth(normalizedDate);\n        };\n        Options.prototype.setMaxDate = function (date) {\n            var normalizedDate = TheDatepicker.Helper.normalizeDate('Max date', date, this);\n            this.checkConstraints(this.minDate, normalizedDate);\n            this.maxDate = normalizedDate;\n            this.maxMonth = TheDatepicker.Helper.normalizeMonth(normalizedDate);\n        };\n        Options.prototype.setInitialMonth = function (month) {\n            this.initialMonth = TheDatepicker.Helper.normalizeDate('Initial month', month, this);\n        };\n        Options.prototype.setInitialDate = function (value) {\n            this.initialDate = TheDatepicker.Helper.normalizeDate('Initial date', value, this);\n        };\n        Options.prototype.setInitialDatePriority = function (value) {\n            this.initialDatePriority = !!value;\n        };\n        Options.prototype.setFirstDayOfWeek = function (dayOfWeek) {\n            this.firstDayOfWeek = TheDatepicker.Helper.checkNumber('First day of week', dayOfWeek, 0, 6);\n        };\n        Options.prototype.setDateAvailabilityResolver = function (resolver) {\n            this.dateAvailabilityResolver = TheDatepicker.Helper.checkFunction('Resolver', resolver);\n        };\n        Options.prototype.setCellContentResolver = function (resolver) {\n            this.cellContentResolver = TheDatepicker.Helper.checkFunction('Resolver', resolver);\n        };\n        Options.prototype.setCellContentStructureResolver = function (init, update) {\n            if (update === void 0) { update = null; }\n            init = TheDatepicker.Helper.checkFunction('Resolver (init)', init);\n            update = TheDatepicker.Helper.checkFunction('Resolver (update)', update);\n            this.cellContentStructureResolver = init === null ? null : {\n                init: init,\n                update: update\n            };\n        };\n        Options.prototype.setCellClassesResolver = function (resolver) {\n            this.cellClassesResolver = TheDatepicker.Helper.checkFunction('Resolver', resolver);\n        };\n        Options.prototype.setInputFormat = function (format) {\n            this.inputFormat = TheDatepicker.Helper.checkString('Input format', format, true);\n        };\n        Options.prototype.setDaysOutOfMonthVisible = function (value) {\n            this.daysOutOfMonthVisible = !!value;\n        };\n        Options.prototype.setFixedRowsCount = function (value) {\n            this.fixedRowsCount = !!value;\n        };\n        Options.prototype.setToggleSelection = function (value) {\n            this.toggleSelection = !!value;\n        };\n        Options.prototype.setShowDeselectButton = function (value) {\n            this.showDeselectButton = !!value;\n        };\n        Options.prototype.setAllowEmpty = function (value) {\n            this.allowEmpty = !!value;\n        };\n        Options.prototype.setShowResetButton = function (value) {\n            this.showResetButton = !!value;\n        };\n        Options.prototype.setMonthAsDropdown = function (value) {\n            this.monthAsDropdown = !!value;\n        };\n        Options.prototype.setYearAsDropdown = function (value) {\n            this.yearAsDropdown = !!value;\n        };\n        Options.prototype.setMonthAndYearSeparated = function (value) {\n            this.monthAndYearSeparated = !!value;\n        };\n        Options.prototype.setClassesPrefix = function (prefix) {\n            this.classesPrefix = TheDatepicker.Helper.checkString('Prefix', prefix);\n        };\n        Options.prototype.setShowCloseButton = function (value) {\n            this.showCloseButton = !!value;\n        };\n        Options.prototype.setTitle = function (title) {\n            this.title = TheDatepicker.Helper.checkString('Title', title);\n        };\n        Options.prototype.setDropdownItemsLimit = function (limit) {\n            this.dropdownItemsLimit = TheDatepicker.Helper.checkNumber('Items limit', limit, 1);\n        };\n        Options.prototype.setGoBackHtml = function (html) {\n            this.goBackHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setGoForwardHtml = function (html) {\n            this.goForwardHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setCloseHtml = function (html) {\n            this.closeHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setResetHtml = function (html) {\n            this.resetHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setDeselectHtml = function (html) {\n            this.deselectHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setPositionFixing = function (value) {\n            this.positionFixing = !!value;\n        };\n        Options.prototype.setToday = function (date) {\n            this.today = TheDatepicker.Helper.normalizeDate('Today', date, this);\n        };\n        Options.prototype.onBeforeSelect = function (listener) {\n            this.onEventListener(EventType.BeforeSelect, listener);\n        };\n        Options.prototype.offBeforeSelect = function (listener) {\n            if (listener === void 0) { listener = null; }\n            this.offEventListener(EventType.BeforeSelect, listener);\n        };\n        Options.prototype.onSelect = function (listener) {\n            this.onEventListener(EventType.Select, listener);\n        };\n        Options.prototype.offSelect = function (listener) {\n            if (listener === void 0) { listener = null; }\n            this.offEventListener(EventType.Select, listener);\n        };\n        Options.prototype.onBeforeOpenAndClose = function (listener) {\n            this.onEventListener(EventType.BeforeOpenAndClose, listener);\n        };\n        Options.prototype.offBeforeOpenAndClose = function (listener) {\n            if (listener === void 0) { listener = null; }\n            this.offEventListener(EventType.BeforeOpenAndClose, listener);\n        };\n        Options.prototype.onOpenAndClose = function (listener) {\n            this.onEventListener(EventType.OpenAndClose, listener);\n        };\n        Options.prototype.offOpenAndClose = function (listener) {\n            if (listener === void 0) { listener = null; }\n            this.offEventListener(EventType.OpenAndClose, listener);\n        };\n        Options.prototype.onBeforeMonthChange = function (listener) {\n            this.onEventListener(EventType.BeforeMonthChange, listener);\n        };\n        Options.prototype.offBeforeMonthChange = function (listener) {\n            if (listener === void 0) { listener = null; }\n            this.offEventListener(EventType.BeforeMonthChange, listener);\n        };\n        Options.prototype.onMonthChange = function (listener) {\n            this.onEventListener(EventType.MonthChange, listener);\n        };\n        Options.prototype.offMonthChange = function (listener) {\n            if (listener === void 0) { listener = null; }\n            this.offEventListener(EventType.MonthChange, listener);\n        };\n        Options.prototype.getInitialMonth = function () {\n            var primarySource = this.initialDatePriority ? this.initialDate : this.initialMonth;\n            var secondarySource = this.initialDatePriority ? this.initialMonth : this.initialDate;\n            var initialMonth = primarySource !== null\n                ? new Date(primarySource.getTime())\n                : (secondarySource !== null\n                    ? new Date(secondarySource.getTime())\n                    : this.getToday());\n            initialMonth.setDate(1);\n            return this.correctMonth(initialMonth);\n        };\n        Options.prototype.isMonthInValidity = function (month) {\n            return this.calculateMonthCorrection(month) === null;\n        };\n        Options.prototype.correctMonth = function (month) {\n            var correctMonth = this.calculateMonthCorrection(month);\n            return correctMonth !== null ? correctMonth : month;\n        };\n        Options.prototype.getInitialDate = function () {\n            return this.findPossibleAvailableDate(this.initialDate);\n        };\n        Options.prototype.findPossibleAvailableDate = function (date) {\n            if (this.isAllowedEmpty()) {\n                return date !== null && this.isDateInValidity(date) && this.isDateAvailable(date)\n                    ? new Date(date.getTime())\n                    : null;\n            }\n            date = date !== null ? new Date(date.getTime()) : this.getToday();\n            date = this.findNearestAvailableDate(date);\n            if (date !== null) {\n                return date;\n            }\n            throw new AvailableDateNotFoundException();\n        };\n        Options.prototype.findNearestAvailableDate = function (date) {\n            date = this.correctDate(date);\n            if (this.isDateAvailable(date)) {\n                return date;\n            }\n            var maxLoops = 1000;\n            var increasedDate = date;\n            var decreasedDate = new Date(date.getTime());\n            do {\n                if (increasedDate !== null) {\n                    increasedDate.setDate(increasedDate.getDate() + 1);\n                    if (this.maxDate !== null && increasedDate.getTime() > this.maxDate.getTime()) {\n                        increasedDate = null;\n                    }\n                    else if (this.isDateAvailable(increasedDate)) {\n                        return increasedDate;\n                    }\n                }\n                if (decreasedDate !== null) {\n                    decreasedDate.setDate(decreasedDate.getDate() - 1);\n                    if (this.minDate !== null && decreasedDate.getTime() < this.minDate.getTime()) {\n                        decreasedDate = null;\n                    }\n                    else if (this.isDateAvailable(decreasedDate)) {\n                        return decreasedDate;\n                    }\n                }\n                maxLoops--;\n            } while ((increasedDate !== null || decreasedDate !== null) && maxLoops > 0);\n            return null;\n        };\n        Options.prototype.isDateInValidity = function (date) {\n            return this.calculateDateCorrection(date) === null;\n        };\n        Options.prototype.correctDate = function (date) {\n            var correctDate = this.calculateDateCorrection(date);\n            return correctDate !== null ? correctDate : date;\n        };\n        Options.prototype.getFirstDayOfWeek = function () {\n            return this.firstDayOfWeek;\n        };\n        Options.prototype.areDaysOutOfMonthVisible = function () {\n            return this.daysOutOfMonthVisible;\n        };\n        Options.prototype.hasFixedRowsCount = function () {\n            return this.fixedRowsCount;\n        };\n        Options.prototype.hasToggleSelection = function () {\n            return this.allowEmpty && this.toggleSelection;\n        };\n        Options.prototype.isAllowedEmpty = function () {\n            return this.allowEmpty;\n        };\n        Options.prototype.isDeselectButtonShown = function () {\n            return this.allowEmpty && this.showDeselectButton;\n        };\n        Options.prototype.isResetButtonShown = function () {\n            return this.showResetButton;\n        };\n        Options.prototype.isMonthAsDropdown = function () {\n            return this.monthAsDropdown;\n        };\n        Options.prototype.isYearAsDropdown = function () {\n            return this.yearAsDropdown;\n        };\n        Options.prototype.isMonthAndYearSeparated = function () {\n            return this.monthAndYearSeparated;\n        };\n        Options.prototype.getClassesPrefix = function () {\n            return this.classesPrefix;\n        };\n        Options.prototype.isCloseButtonShown = function () {\n            return this.hideOnBlur && this.showCloseButton;\n        };\n        Options.prototype.getTitle = function () {\n            return this.title;\n        };\n        Options.prototype.getMinDate = function () {\n            return this.minDate;\n        };\n        Options.prototype.getMaxDate = function () {\n            return this.maxDate;\n        };\n        Options.prototype.getMinMonth = function () {\n            return this.minMonth;\n        };\n        Options.prototype.getMaxMonth = function () {\n            return this.maxMonth;\n        };\n        Options.prototype.getDropdownItemsLimit = function () {\n            return this.dropdownItemsLimit;\n        };\n        Options.prototype.isDateAvailable = function (date) {\n            if (this.dateAvailabilityResolver !== null) {\n                return !!this.dateAvailabilityResolver(new Date(date.getTime()));\n            }\n            return true;\n        };\n        Options.prototype.getCellContent = function (day) {\n            if (this.cellContentResolver !== null) {\n                return this.cellContentResolver(day);\n            }\n            return day.dayNumber + '';\n        };\n        Options.prototype.getCellStructure = function () {\n            if (this.cellContentStructureResolver !== null) {\n                return this.cellContentStructureResolver.init();\n            }\n            return this.document.createElement('span');\n        };\n        Options.prototype.updateCellStructure = function (element, day) {\n            if (this.cellContentStructureResolver !== null) {\n                this.cellContentStructureResolver.update(element, day);\n            }\n            else {\n                element.innerText = this.getCellContent(day);\n            }\n        };\n        Options.prototype.getCellClasses = function (day) {\n            if (this.cellClassesResolver !== null) {\n                var classes = this.cellClassesResolver(day);\n                if (typeof classes === 'object' && classes.constructor === Array) {\n                    return classes;\n                }\n            }\n            return [];\n        };\n        Options.prototype.getGoBackHtml = function () {\n            return this.goBackHtml;\n        };\n        Options.prototype.getGoForwardHtml = function () {\n            return this.goForwardHtml;\n        };\n        Options.prototype.getCloseHtml = function () {\n            return this.closeHtml;\n        };\n        Options.prototype.getResetHtml = function () {\n            return this.resetHtml;\n        };\n        Options.prototype.getDeselectHtml = function () {\n            return this.deselectHtml;\n        };\n        Options.prototype.isHiddenOnBlur = function () {\n            return this.hideOnBlur;\n        };\n        Options.prototype.isHiddenOnSelect = function () {\n            return this.hideOnBlur && this.hideOnSelect;\n        };\n        Options.prototype.getInputFormat = function () {\n            return this.inputFormat;\n        };\n        Options.prototype.isPositionFixingEnabled = function () {\n            return this.hideOnBlur && this.positionFixing;\n        };\n        Options.prototype.getToday = function () {\n            return this.today !== null ? new Date(this.today.getTime()) : TheDatepicker.Helper.resetTime(new Date());\n        };\n        Options.prototype.checkConstraints = function (minDate, maxDate) {\n            if (minDate !== null\n                && maxDate !== null\n                && minDate.getTime() > maxDate.getTime()) {\n                throw new Error('Min date cannot be higher then max date.');\n            }\n        };\n        Options.prototype.calculateMonthCorrection = function (month) {\n            var minMonth = this.getMinMonth();\n            if (minMonth !== null && month.getTime() < minMonth.getTime()) {\n                return minMonth;\n            }\n            var maxMonth = this.getMaxMonth();\n            if (maxMonth !== null && month.getTime() > maxMonth.getTime()) {\n                return maxMonth;\n            }\n            return null;\n        };\n        Options.prototype.calculateDateCorrection = function (date) {\n            if (this.minDate !== null && date.getTime() < this.minDate.getTime()) {\n                return new Date(this.minDate.getTime());\n            }\n            if (this.maxDate !== null && date.getTime() > this.maxDate.getTime()) {\n                return new Date(this.maxDate.getTime());\n            }\n            return null;\n        };\n        Options.prototype.onEventListener = function (eventType, listener) {\n            this.listeners[eventType].push(TheDatepicker.Helper.checkFunction('Event listener', listener, false));\n        };\n        Options.prototype.offEventListener = function (eventType, listener) {\n            listener = TheDatepicker.Helper.checkFunction('Event listener', listener);\n            if (listener === null) {\n                this.listeners[eventType] = [];\n            }\n            else {\n                var newListeners = [];\n                for (var index = 0; index < this.listeners[eventType].length; index++) {\n                    if (this.listeners[eventType][index] !== listener) {\n                        newListeners.push(this.listeners[eventType][index]);\n                    }\n                }\n                this.listeners[eventType] = newListeners;\n            }\n        };\n        Options.prototype.triggerEvent = function (eventType, caller) {\n            for (var index = 0; index < this.listeners[eventType].length; index++) {\n                if (caller(this.listeners[eventType][index]) === false) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return Options;\n    }());\n    TheDatepicker.Options = Options;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var MoveDirection;\n    (function (MoveDirection) {\n        MoveDirection[MoveDirection[\"Left\"] = -1] = \"Left\";\n        MoveDirection[MoveDirection[\"Up\"] = -7] = \"Up\";\n        MoveDirection[MoveDirection[\"Right\"] = 1] = \"Right\";\n        MoveDirection[MoveDirection[\"Down\"] = 7] = \"Down\";\n    })(MoveDirection = TheDatepicker.MoveDirection || (TheDatepicker.MoveDirection = {}));\n    var ViewModel = (function () {\n        function ViewModel(options, datepicker) {\n            this.options = options;\n            this.datepicker = datepicker;\n            this.selectedDate = null;\n            this.currentMonth = null;\n            this.highlightedDay = null;\n            this.isHighlightedDayFocused = false;\n            this.active = false;\n            this.template = new TheDatepicker.Template(this.options, new TheDatepicker.HtmlHelper(this.options), datepicker.container, datepicker.input !== null);\n        }\n        ViewModel.prototype.render = function () {\n            if (this.selectPossibleDate()) {\n                return;\n            }\n            var correctMonth = this.options.correctMonth(this.getCurrentMonth());\n            if (this.goToMonth(null, correctMonth)) {\n                return;\n            }\n            this.template.render(this);\n            this.datepicker.updateInput();\n        };\n        ViewModel.prototype.setActive = function (event, value) {\n            if (this.active === value) {\n                return true;\n            }\n            if (!this.triggerOnBeforeOpenAndClose(event, value)) {\n                return false;\n            }\n            this.active = value;\n            if (this.options.isHiddenOnBlur()) {\n                this.render();\n            }\n            this.triggerOnOpenAndClose(event, value);\n            return true;\n        };\n        ViewModel.prototype.isActive = function () {\n            return this.active;\n        };\n        ViewModel.prototype.close = function (event) {\n            return this.datepicker.close(event);\n        };\n        ViewModel.prototype.getCurrentMonth = function () {\n            if (this.currentMonth === null) {\n                this.currentMonth = this.options.getInitialMonth();\n            }\n            return this.currentMonth;\n        };\n        ViewModel.prototype.canGoBack = function () {\n            var newMonth = new Date(this.getCurrentMonth().getTime());\n            newMonth.setMonth(newMonth.getMonth() - 1);\n            return this.canGoToMonth(newMonth);\n        };\n        ViewModel.prototype.canGoForward = function () {\n            var newMonth = new Date(this.getCurrentMonth().getTime());\n            newMonth.setMonth(newMonth.getMonth() + 1);\n            return this.canGoToMonth(newMonth);\n        };\n        ViewModel.prototype.canGoToMonth = function (month) {\n            return this.options.isMonthInValidity(month);\n        };\n        ViewModel.prototype.goBack = function (event) {\n            var newMonth = new Date(this.getCurrentMonth().getTime());\n            newMonth.setMonth(newMonth.getMonth() - 1);\n            return this.goToMonth(event, newMonth);\n        };\n        ViewModel.prototype.goForward = function (event) {\n            var newMonth = new Date(this.getCurrentMonth().getTime());\n            newMonth.setMonth(newMonth.getMonth() + 1);\n            return this.goToMonth(event, newMonth);\n        };\n        ViewModel.prototype.goToMonth = function (event, month, doCancelHighlight) {\n            if (doCancelHighlight === void 0) { doCancelHighlight = true; }\n            month = TheDatepicker.Helper.resetTime(new Date(month.getTime()));\n            month.setDate(1);\n            if (month.getTime() === this.getCurrentMonth().getTime() || !this.canGoToMonth(month)) {\n                return false;\n            }\n            if (!this.triggerOnBeforeMonthChange(event, month, this.currentMonth)) {\n                return false;\n            }\n            this.currentMonth = month;\n            if (!doCancelHighlight || !this.cancelHighlight()) {\n                this.render();\n            }\n            this.triggerOnMonthChange(event, month, this.currentMonth);\n            return true;\n        };\n        ViewModel.prototype.reset = function (event) {\n            var isMonthChanged = this.goToMonth(event, this.options.getInitialMonth());\n            var isDaySelected = this.selectInitialDate(event);\n            return isMonthChanged || isDaySelected;\n        };\n        ViewModel.prototype.selectDay = function (event, date, doUpdateMonth, doHighlight, canToggle) {\n            if (doUpdateMonth === void 0) { doUpdateMonth = true; }\n            if (doHighlight === void 0) { doHighlight = false; }\n            if (canToggle === void 0) { canToggle = false; }\n            if (date === null) {\n                return this.cancelSelection(event);\n            }\n            var day;\n            if (date instanceof TheDatepicker.Day) {\n                day = date;\n                date = day.getDate();\n            }\n            else {\n                day = this.createDay(date);\n            }\n            if (!day.isAvailable) {\n                return false;\n            }\n            if (day.isEqualToDate(this.selectedDate)) {\n                if (canToggle && this.options.hasToggleSelection()) {\n                    return this.cancelSelection(event);\n                }\n                return false;\n            }\n            var previousDay = this.selectedDate !== null ? this.createDay(this.selectedDate) : null;\n            if (!this.triggerOnBeforeSelect(event, day, previousDay)) {\n                return false;\n            }\n            this.selectedDate = day.getDate();\n            if (doHighlight) {\n                this.highlightedDay = day;\n                this.isHighlightedDayFocused = true;\n            }\n            if (!doUpdateMonth || !this.goToMonth(event, date)) {\n                this.render();\n            }\n            this.triggerOnSelect(event, day, previousDay);\n            return true;\n        };\n        ViewModel.prototype.selectNearestDate = function (event, date) {\n            return this.selectDay(event, this.options.findNearestAvailableDate(date));\n        };\n        ViewModel.prototype.selectPossibleDate = function () {\n            try {\n                return this.selectDay(null, this.options.findPossibleAvailableDate(this.selectedDate), false);\n            }\n            catch (error) {\n                if (!(error instanceof TheDatepicker.AvailableDateNotFoundException)) {\n                    throw error;\n                }\n                return this.cancelSelection(null, true);\n            }\n        };\n        ViewModel.prototype.selectInitialDate = function (event) {\n            try {\n                return this.selectDay(event, this.options.getInitialDate(), false);\n            }\n            catch (error) {\n                if (!(error instanceof TheDatepicker.AvailableDateNotFoundException)) {\n                    throw error;\n                }\n                return this.cancelSelection(null, true);\n            }\n        };\n        ViewModel.prototype.highlightDay = function (event, day, doUpdateMonth) {\n            if (doUpdateMonth === void 0) { doUpdateMonth = false; }\n            if (!day.isAvailable) {\n                return false;\n            }\n            if (day.isEqualToDay(this.highlightedDay)) {\n                return false;\n            }\n            this.highlightedDay = day;\n            this.isHighlightedDayFocused = true;\n            var date = day.getDate();\n            if (!doUpdateMonth || !this.goToMonth(event, date, false)) {\n                this.render();\n            }\n            return true;\n        };\n        ViewModel.prototype.highlightFirstAvailableDay = function (event) {\n            var date = new Date(this.getCurrentMonth().getTime());\n            var maxDate = this.options.getMaxDate();\n            var day = this.createDay(date);\n            while (!day.isAvailable) {\n                date.setDate(day.dayNumber + 1);\n                if (date.getDate() === 1) {\n                    break;\n                }\n                if (maxDate !== null && date.getTime() > maxDate.getTime()) {\n                    break;\n                }\n                day = this.createDay(date);\n            }\n            return this.highlightDay(event, day);\n        };\n        ViewModel.prototype.highlightSiblingDay = function (event, day, direction) {\n            var newDay = day;\n            var date = newDay.getDate();\n            var maxLoops = 1000;\n            do {\n                date.setDate(newDay.dayNumber + direction);\n                newDay = this.createDay(date);\n                if (!newDay.isInValidity) {\n                    break;\n                }\n                maxLoops--;\n            } while (!newDay.isAvailable && maxLoops > 0);\n            return this.highlightDay(event, newDay, true);\n        };\n        ViewModel.prototype.cancelSelection = function (event, force) {\n            if (force === void 0) { force = false; }\n            if (!this.options.isAllowedEmpty() && !force) {\n                return false;\n            }\n            if (this.selectedDate === null) {\n                return false;\n            }\n            var previousDay = this.createDay(this.selectedDate);\n            if (!this.triggerOnBeforeSelect(event, null, previousDay)) {\n                return false;\n            }\n            this.selectedDate = null;\n            this.render();\n            this.triggerOnSelect(event, null, previousDay);\n            return true;\n        };\n        ViewModel.prototype.cancelHighlight = function () {\n            if (this.highlightedDay === null) {\n                return false;\n            }\n            this.highlightedDay = null;\n            this.render();\n            return true;\n        };\n        ViewModel.prototype.getWeekDays = function () {\n            var weekDays = [];\n            for (var day = 0; day < 7; day++) {\n                weekDays.push((this.options.getFirstDayOfWeek() + day) % 7);\n            }\n            return weekDays;\n        };\n        ViewModel.prototype.getWeeks = function () {\n            var date;\n            var days = [];\n            var currentMonth = this.getCurrentMonth();\n            var firstDateOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);\n            var lastMonthDaysCount = (new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 0)).getDate();\n            var prependDaysCount = (firstDateOfMonth.getDay() - this.options.getFirstDayOfWeek() + 7) % 7;\n            for (date = lastMonthDaysCount - prependDaysCount + 1; date <= lastMonthDaysCount; date++) {\n                var day = this.createDay(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1, date));\n                day.isVisible = this.options.areDaysOutOfMonthVisible();\n                day.isInCurrentMonth = false;\n                days.push(day);\n            }\n            var lastDateOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);\n            var monthDaysCount = lastDateOfMonth.getDate();\n            for (date = 1; date <= monthDaysCount; date++) {\n                days.push(this.createDay(new Date(currentMonth.getFullYear(), currentMonth.getMonth(), date)));\n            }\n            var appendDaysCount = 6 - ((lastDateOfMonth.getDay() - this.options.getFirstDayOfWeek() + 7) % 7);\n            for (date = 1; date <= appendDaysCount; date++) {\n                var day = this.createDay(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, date));\n                day.isVisible = this.options.areDaysOutOfMonthVisible();\n                day.isInCurrentMonth = false;\n                days.push(day);\n            }\n            if (this.options.hasFixedRowsCount()) {\n                for (var date_4 = appendDaysCount + 1; days.length < 6 * 7; date_4++) {\n                    var day = this.createDay(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, date_4));\n                    day.isVisible = this.options.areDaysOutOfMonthVisible();\n                    day.isInCurrentMonth = false;\n                    days.push(day);\n                }\n            }\n            var weeks = [];\n            for (var i = 0; i < days.length; i += 7) {\n                weeks.push(days.slice(i, i + 7));\n            }\n            return weeks;\n        };\n        ViewModel.prototype.triggerKeyPress = function (event) {\n            if (TheDatepicker.Helper.inArray([TheDatepicker.KeyCode.Left, TheDatepicker.KeyCode.Up, TheDatepicker.KeyCode.Right, TheDatepicker.KeyCode.Down], event.keyCode)) {\n                TheDatepicker.Helper.preventDefault(event);\n                if (this.highlightedDay !== null) {\n                    this.highlightSiblingDay(event, this.highlightedDay, this.translateKeyCodeToMoveDirection(event.keyCode));\n                }\n                else if (this.selectedDate !== null\n                    && this.selectedDate.getFullYear() === this.getCurrentMonth().getFullYear()\n                    && this.selectedDate.getMonth() === this.getCurrentMonth().getMonth()) {\n                    this.highlightSiblingDay(event, this.createDay(this.selectedDate), this.translateKeyCodeToMoveDirection(event.keyCode));\n                }\n                else {\n                    this.highlightFirstAvailableDay(event);\n                }\n            }\n        };\n        ViewModel.prototype.triggerOnBeforeSelect = function (event, day, previousDay) {\n            var _this = this;\n            return this.options.triggerEvent(TheDatepicker.EventType.BeforeSelect, function (listener) {\n                return listener.call(_this.datepicker, event, day, previousDay);\n            });\n        };\n        ViewModel.prototype.triggerOnSelect = function (event, day, previousDay) {\n            var _this = this;\n            this.options.triggerEvent(TheDatepicker.EventType.Select, function (listener) {\n                return listener.call(_this.datepicker, event, day, previousDay);\n            });\n        };\n        ViewModel.prototype.triggerOnBeforeOpenAndClose = function (event, isOpening) {\n            var _this = this;\n            return this.options.triggerEvent(TheDatepicker.EventType.BeforeOpenAndClose, function (listener) {\n                return listener.call(_this.datepicker, event, isOpening);\n            });\n        };\n        ViewModel.prototype.triggerOnOpenAndClose = function (event, isOpening) {\n            var _this = this;\n            this.options.triggerEvent(TheDatepicker.EventType.OpenAndClose, function (listener) {\n                return listener.call(_this.datepicker, event, isOpening);\n            });\n        };\n        ViewModel.prototype.triggerOnBeforeMonthChange = function (event, month, previousMonth) {\n            var _this = this;\n            return this.options.triggerEvent(TheDatepicker.EventType.BeforeMonthChange, function (listener) {\n                return listener.call(_this.datepicker, event, month, previousMonth);\n            });\n        };\n        ViewModel.prototype.triggerOnMonthChange = function (event, month, previousMonth) {\n            var _this = this;\n            this.options.triggerEvent(TheDatepicker.EventType.MonthChange, function (listener) {\n                return listener.call(_this.datepicker, event, month, previousMonth);\n            });\n        };\n        ViewModel.prototype.createDay = function (date) {\n            date = TheDatepicker.Helper.resetTime(new Date(date.getTime()));\n            var today = this.options.getToday();\n            var day = new TheDatepicker.Day(date);\n            day.isToday = date.getTime() === today.getTime();\n            day.isPast = date.getTime() < today.getTime();\n            day.isInValidity = this.options.isDateInValidity(date);\n            day.isAvailable = day.isInValidity && this.options.isDateAvailable(date);\n            if (day.isAvailable) {\n                if (day.isEqualToDate(this.selectedDate)) {\n                    day.isSelected = true;\n                }\n                if (day.isEqualToDay(this.highlightedDay)) {\n                    day.isHighlighted = true;\n                    if (this.isHighlightedDayFocused) {\n                        day.isFocused = true;\n                        this.isHighlightedDayFocused = false;\n                    }\n                }\n            }\n            return day;\n        };\n        ViewModel.prototype.translateKeyCodeToMoveDirection = function (key) {\n            switch (key) {\n                case TheDatepicker.KeyCode.Left:\n                    return MoveDirection.Left;\n                case TheDatepicker.KeyCode.Up:\n                    return MoveDirection.Up;\n                case TheDatepicker.KeyCode.Right:\n                    return MoveDirection.Right;\n                case TheDatepicker.KeyCode.Down:\n                    return MoveDirection.Down;\n                default:\n                    throw new Error('Invalid key code: ' + key);\n            }\n        };\n        return ViewModel;\n    }());\n    TheDatepicker.ViewModel = ViewModel;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function (TheDatepicker) {\n    var Template = (function () {\n        function Template(options, htmlHelper, container, hasInput) {\n            this.options = options;\n            this.htmlHelper = htmlHelper;\n            this.container = container;\n            this.hasInput = hasInput;\n            this.mainElement = null;\n            this.controlElement = null;\n            this.goBackElement = null;\n            this.goForwardElement = null;\n            this.titleElement = null;\n            this.titleContentElement = null;\n            this.resetElement = null;\n            this.closeElement = null;\n            this.monthSelect = null;\n            this.monthElement = null;\n            this.yearSelect = null;\n            this.yearElement = null;\n            this.monthAndYearSelect = null;\n            this.monthAndYearElement = null;\n            this.weeksElements = [];\n            this.daysElements = [];\n            this.daysButtonsElements = [];\n            this.daysContentsElements = [];\n        }\n        Template.prototype.render = function (viewModel) {\n            if (this.mainElement === null) {\n                if (this.hasInput && this.options.isHiddenOnBlur() && !viewModel.isActive()) {\n                    return;\n                }\n                this.container.innerHTML = '';\n                this.container.appendChild(this.createSkeleton(viewModel));\n            }\n            this.updateMainElement(viewModel);\n            this.updateTopElement(viewModel);\n            this.updateTitleElement(viewModel);\n            this.updateCloseElement(viewModel);\n            this.updateResetElement(viewModel);\n            this.updateGoBackElement(viewModel);\n            this.updateGoForwardElement(viewModel);\n            this.updateMonthElement(viewModel);\n            this.updateYearElement(viewModel);\n            this.updateMonthAndYearElement(viewModel);\n            this.updateWeeksElements(viewModel);\n        };\n        Template.prototype.createSkeleton = function (viewModel) {\n            var main = this.htmlHelper.createDiv('main');\n            main.appendChild(this.createHeaderElement(viewModel));\n            main.appendChild(this.createBodyElement(viewModel));\n            this.mainElement = main;\n            return main;\n        };\n        Template.prototype.updateMainElement = function (viewModel) {\n            this.mainElement.style.display = !this.hasInput || viewModel.isActive() || !this.options.isHiddenOnBlur() ? '' : 'none';\n        };\n        Template.prototype.createBodyElement = function (viewModel) {\n            var body = this.htmlHelper.createDiv('body');\n            body.appendChild(this.createTableElement(viewModel));\n            return body;\n        };\n        Template.prototype.createHeaderElement = function (viewModel) {\n            var header = this.htmlHelper.createDiv('header');\n            var top = this.htmlHelper.createDiv('top');\n            header.appendChild(top);\n            top.appendChild(this.createTitleElement(viewModel));\n            var control = this.htmlHelper.createDiv('control');\n            top.appendChild(control);\n            control.appendChild(this.createResetElement(viewModel));\n            control.appendChild(this.createCloseElement(viewModel));\n            var navigation = this.htmlHelper.createDiv('navigation');\n            header.appendChild(navigation);\n            navigation.appendChild(this.createGoBackElement(viewModel));\n            var state = this.htmlHelper.createDiv('state');\n            navigation.appendChild(state);\n            if (this.options.isMonthAndYearSeparated()) {\n                state.appendChild(this.createMonthElement(viewModel));\n                state.appendChild(this.createYearElement(viewModel));\n            }\n            else {\n                state.appendChild(this.createMonthAndYearElement(viewModel));\n            }\n            navigation.appendChild(this.createGoForwardElement(viewModel));\n            this.controlElement = control;\n            return header;\n        };\n        Template.prototype.updateTopElement = function (viewModel) {\n            var isVisible = this.options.getTitle() !== ''\n                || this.options.isResetButtonShown()\n                || (this.hasInput && this.options.isCloseButtonShown());\n            this.controlElement.style.display = isVisible ? '' : 'none';\n            this.titleElement.style.display = isVisible ? '' : 'none';\n        };\n        Template.prototype.createTitleElement = function (viewModel) {\n            var titleElement = this.htmlHelper.createDiv('title');\n            var titleContent = this.htmlHelper.createSpan();\n            titleElement.appendChild(titleContent);\n            this.htmlHelper.addClass(titleContent, 'title-content');\n            this.titleElement = titleElement;\n            this.titleContentElement = titleContent;\n            return titleElement;\n        };\n        Template.prototype.updateTitleElement = function (viewModel) {\n            var title = this.options.getTitle();\n            this.titleContentElement.style.display = title !== '' ? '' : 'none';\n            this.titleContentElement.innerText = title;\n        };\n        Template.prototype.createResetElement = function (viewModel) {\n            var resetElement = this.htmlHelper.createDiv('reset');\n            var resetButton = this.htmlHelper.createAnchor(function (event) {\n                viewModel.reset(event);\n            });\n            resetButton.innerHTML = this.options.getResetHtml();\n            resetElement.appendChild(resetButton);\n            this.resetElement = resetElement;\n            return resetElement;\n        };\n        Template.prototype.updateResetElement = function (viewModel) {\n            this.resetElement.style.display = this.options.isResetButtonShown() ? '' : 'none';\n        };\n        Template.prototype.createCloseElement = function (viewModel) {\n            var closeElement = this.htmlHelper.createDiv('close');\n            var closeButton = this.htmlHelper.createAnchor(function (event) {\n                viewModel.close(event);\n            });\n            closeButton.innerHTML = this.options.getCloseHtml();\n            closeElement.appendChild(closeButton);\n            this.closeElement = closeElement;\n            return closeElement;\n        };\n        Template.prototype.updateCloseElement = function (viewModel) {\n            this.closeElement.style.display = this.hasInput && this.options.isCloseButtonShown() ? '' : 'none';\n        };\n        Template.prototype.createGoBackElement = function (viewModel) {\n            return this.createGoElement(viewModel, false);\n        };\n        Template.prototype.createGoForwardElement = function (viewModel) {\n            return this.createGoElement(viewModel, true);\n        };\n        Template.prototype.createGoElement = function (viewModel, directionForward) {\n            var goElement = this.htmlHelper.createDiv('go');\n            this.htmlHelper.addClass(goElement, directionForward ? 'go-next' : 'go-previous');\n            var goButton = this.htmlHelper.createAnchor(function (event) {\n                if (directionForward) {\n                    viewModel.goForward(event);\n                }\n                else {\n                    viewModel.goBack(event);\n                }\n            });\n            goButton.innerHTML = directionForward ? this.options.getGoForwardHtml() : this.options.getGoBackHtml();\n            goElement.appendChild(goButton);\n            if (directionForward) {\n                this.goForwardElement = goButton;\n            }\n            else {\n                this.goBackElement = goButton;\n            }\n            return goElement;\n        };\n        Template.prototype.updateGoBackElement = function (viewModel) {\n            this.goBackElement.style.visibility = viewModel.canGoBack() ? 'visible' : 'hidden';\n        };\n        Template.prototype.updateGoForwardElement = function (viewModel) {\n            this.goForwardElement.style.visibility = viewModel.canGoForward() ? 'visible' : 'hidden';\n        };\n        Template.prototype.createMonthElement = function (viewModel) {\n            var _this = this;\n            var options = [];\n            for (var monthNumber = 0; monthNumber < 12; monthNumber++) {\n                options.push({\n                    value: monthNumber + '',\n                    label: this.options.translator.translateMonth(monthNumber)\n                });\n            }\n            var selectElement = this.htmlHelper.createSelectInput(options, function (event, monthNumber) {\n                var currentMonth = viewModel.getCurrentMonth();\n                var newMonth = new Date(currentMonth.getTime());\n                newMonth.setMonth(parseInt(monthNumber, 10));\n                if (!viewModel.goToMonth(event, newMonth)) {\n                    _this.monthSelect.value = currentMonth.getMonth() + '';\n                }\n            });\n            var monthElement = this.htmlHelper.createDiv('month');\n            var monthContent = this.htmlHelper.createSpan();\n            monthElement.appendChild(selectElement);\n            monthElement.appendChild(monthContent);\n            this.monthElement = monthContent;\n            this.monthSelect = selectElement;\n            return monthElement;\n        };\n        Template.prototype.updateMonthElement = function (viewModel) {\n            if (this.monthElement === null) {\n                return;\n            }\n            var currentMonth = viewModel.getCurrentMonth().getMonth();\n            this.monthElement.innerText = this.options.translator.translateMonth(currentMonth);\n            if (!this.options.isMonthAsDropdown()) {\n                this.monthSelect.style.display = 'none';\n                this.monthElement.style.display = '';\n                return;\n            }\n            var valuesCount = 0;\n            for (var monthNumber = 0; monthNumber < 12; monthNumber++) {\n                var newMonth = new Date(viewModel.getCurrentMonth().getTime());\n                newMonth.setMonth(monthNumber);\n                var option = this.monthSelect.getElementsByTagName('option')[monthNumber];\n                var canGoToMonth = viewModel.canGoToMonth(newMonth);\n                option.disabled = !canGoToMonth;\n                option.style.display = canGoToMonth ? '' : 'none';\n                valuesCount += canGoToMonth ? 1 : 0;\n            }\n            this.monthSelect.value = currentMonth + '';\n            this.monthSelect.style.display = valuesCount > 1 ? '' : 'none';\n            this.monthElement.style.display = valuesCount > 1 ? 'none' : '';\n        };\n        Template.prototype.createYearElement = function (viewModel) {\n            var _this = this;\n            var selectElement = this.htmlHelper.createSelectInput([], function (event, year) {\n                var currentMonth = viewModel.getCurrentMonth();\n                var newMonth = new Date(currentMonth.getTime());\n                newMonth.setFullYear(parseInt(year, 10));\n                var minMonth = _this.options.getMinMonth();\n                var maxMonth = _this.options.getMaxMonth();\n                if (minMonth !== null && newMonth.getTime() < minMonth.getTime()) {\n                    newMonth = minMonth;\n                }\n                if (maxMonth !== null && newMonth.getTime() > maxMonth.getTime()) {\n                    newMonth = maxMonth;\n                }\n                if (!viewModel.goToMonth(event, newMonth)) {\n                    _this.yearSelect.value = currentMonth.getFullYear() + '';\n                }\n            });\n            var yearElement = this.htmlHelper.createDiv('year');\n            var yearContent = this.htmlHelper.createSpan();\n            yearElement.appendChild(selectElement);\n            yearElement.appendChild(yearContent);\n            this.yearElement = yearContent;\n            this.yearSelect = selectElement;\n            return yearElement;\n        };\n        Template.prototype.updateYearElement = function (viewModel) {\n            if (this.yearElement === null) {\n                return;\n            }\n            var currentYear = viewModel.getCurrentMonth().getFullYear();\n            this.yearElement.innerText = currentYear + '';\n            if (!this.options.isYearAsDropdown()) {\n                this.yearSelect.style.display = 'none';\n                this.yearElement.style.display = '';\n                return;\n            }\n            var minDate = this.options.getMinDate();\n            var maxDate = this.options.getMaxDate();\n            var minYear = minDate !== null ? minDate.getFullYear() : null;\n            var maxYear = maxDate !== null ? maxDate.getFullYear() : null;\n            var range = this.calculateDropdownRange(currentYear, minYear, maxYear);\n            var options = this.yearSelect.getElementsByTagName('option');\n            var diff = this.calculateDropdownDiff(options, range, function (value) {\n                return parseInt(value, 10);\n            });\n            for (var index = 0; index < diff.remove.length; index++) {\n                this.yearSelect.removeChild(diff.remove[index]);\n            }\n            for (var index = diff.prepend.length - 1; index >= 0; index--) {\n                this.yearSelect.insertBefore(this.htmlHelper.createSelectOption(diff.prepend[index] + '', diff.prepend[index] + ''), this.yearSelect.firstChild);\n            }\n            for (var index = 0; index < diff.append.length; index++) {\n                this.yearSelect.appendChild(this.htmlHelper.createSelectOption(diff.append[index] + '', diff.append[index] + ''));\n            }\n            this.yearSelect.value = currentYear + '';\n            this.yearSelect.style.display = range.from < range.to ? '' : 'none';\n            this.yearElement.style.display = range.from < range.to ? 'none' : '';\n        };\n        Template.prototype.createMonthAndYearElement = function (viewModel) {\n            var _this = this;\n            var monthAndYear = this.htmlHelper.createDiv('month-year');\n            var selectElement = this.htmlHelper.createSelectInput([], function (event, value) {\n                var currentMonth = viewModel.getCurrentMonth();\n                var newMonth = new Date(currentMonth.getTime());\n                var data = _this.parseMonthAndYearOptionValue(value);\n                newMonth.setFullYear(data.year);\n                newMonth.setMonth(data.month);\n                if (!viewModel.goToMonth(event, newMonth)) {\n                    _this.monthAndYearSelect.value = _this.getMonthAndYearOptionValue({\n                        month: currentMonth.getMonth(),\n                        year: currentMonth.getFullYear()\n                    });\n                }\n            });\n            var monthAndYearContent = this.htmlHelper.createSpan();\n            this.monthAndYearElement = monthAndYearContent;\n            this.monthAndYearSelect = selectElement;\n            monthAndYear.appendChild(monthAndYearContent);\n            monthAndYear.appendChild(selectElement);\n            return monthAndYear;\n        };\n        Template.prototype.updateMonthAndYearElement = function (viewModel) {\n            var _this = this;\n            if (this.monthAndYearElement === null) {\n                return;\n            }\n            var currentMonth = viewModel.getCurrentMonth();\n            var currentData = {\n                month: currentMonth.getMonth(),\n                year: currentMonth.getFullYear()\n            };\n            var currentIndex = this.calculateMonthAndYearIndex(currentData);\n            this.monthAndYearElement.innerText = this.translateMonthAndYear(currentData);\n            if (!this.options.isYearAsDropdown() || !this.options.isMonthAsDropdown()) {\n                this.monthAndYearSelect.style.display = 'none';\n                this.monthAndYearElement.style.display = '';\n                return;\n            }\n            var minDate = this.options.getMinDate();\n            var maxDate = this.options.getMaxDate();\n            var minIndex = minDate !== null ? minDate.getFullYear() * 12 + minDate.getMonth() : null;\n            var maxIndex = maxDate !== null ? maxDate.getFullYear() * 12 + maxDate.getMonth() : null;\n            var range = this.calculateDropdownRange(currentIndex, minIndex, maxIndex);\n            var options = this.monthAndYearSelect.getElementsByTagName('option');\n            var diff = this.calculateDropdownDiff(options, range, function (value) {\n                return _this.calculateMonthAndYearIndex(_this.parseMonthAndYearOptionValue(value));\n            });\n            for (var index = 0; index < diff.remove.length; index++) {\n                this.monthAndYearSelect.removeChild(diff.remove[index]);\n            }\n            for (var index = diff.prepend.length - 1; index >= 0; index--) {\n                var data = this.getMonthAndYearByIndex(diff.prepend[index]);\n                this.monthAndYearSelect.insertBefore(this.htmlHelper.createSelectOption(this.getMonthAndYearOptionValue(data), this.translateMonthAndYear(data)), this.monthAndYearSelect.firstChild);\n            }\n            for (var index = 0; index < diff.append.length; index++) {\n                var data = this.getMonthAndYearByIndex(diff.append[index]);\n                this.monthAndYearSelect.appendChild(this.htmlHelper.createSelectOption(this.getMonthAndYearOptionValue(data), this.translateMonthAndYear(data)));\n            }\n            this.monthAndYearSelect.value = this.getMonthAndYearOptionValue(currentData);\n            this.monthAndYearSelect.style.display = range.from < range.to ? '' : 'none';\n            this.monthAndYearElement.style.display = range.from < range.to ? 'none' : '';\n        };\n        Template.prototype.translateMonthAndYear = function (data) {\n            return this.options.translator.translateMonth(data.month) + ' ' + data.year;\n        };\n        Template.prototype.calculateMonthAndYearIndex = function (data) {\n            return data.year * 12 + data.month;\n        };\n        Template.prototype.getMonthAndYearByIndex = function (index) {\n            return {\n                year: Math.floor(index / 12),\n                month: index % 12\n            };\n        };\n        Template.prototype.getMonthAndYearOptionValue = function (data) {\n            return data.year + '-' + data.month;\n        };\n        Template.prototype.parseMonthAndYearOptionValue = function (value) {\n            var parts = value.split('-');\n            return {\n                month: parseInt(parts[1], 10),\n                year: parseInt(parts[0], 10)\n            };\n        };\n        Template.prototype.calculateDropdownRange = function (current, min, max) {\n            var limit = this.options.getDropdownItemsLimit() - 1;\n            var maxAppend = Math.ceil(limit / 2);\n            var from = current - (limit - maxAppend);\n            var to = current + maxAppend;\n            if (min !== null && from < min) {\n                to += min - from;\n                if (max !== null && to > max) {\n                    to = max;\n                }\n                from = min;\n            }\n            else if (max !== null && to > max) {\n                from -= to - max;\n                if (min !== null && from < min) {\n                    from = min;\n                }\n                to = max;\n            }\n            return {\n                from: from,\n                to: to\n            };\n        };\n        Template.prototype.calculateDropdownDiff = function (options, newRange, getNumerical) {\n            var firstOption = options.length > 0 ? getNumerical(options[0].value) : null;\n            var lastOption = options.length > 0 ? getNumerical(options[options.length - 1].value) : null;\n            var prepend = [];\n            var append = [];\n            var remove = [];\n            for (var value = newRange.from; value <= newRange.to; value++) {\n                if (firstOption === null || value < firstOption) {\n                    prepend.push(value);\n                }\n                else if (value > lastOption) {\n                    append.push(value);\n                }\n            }\n            for (var index = 0; index < options.length; index++) {\n                var value = getNumerical(options[index].value);\n                if (value < newRange.from || value > newRange.to) {\n                    remove.push(options[index]);\n                }\n            }\n            return {\n                prepend: prepend,\n                append: append,\n                remove: remove\n            };\n        };\n        Template.prototype.createTableElement = function (viewModel) {\n            var tableHeader = this.createTableHeaderElement(viewModel);\n            var tableBody = this.createTableBodyElement(viewModel);\n            return this.htmlHelper.createTable('calendar', tableHeader, tableBody);\n        };\n        Template.prototype.createTableHeaderElement = function (viewModel) {\n            var weekDays = viewModel.getWeekDays();\n            var cells = [];\n            for (var index = 0; index < weekDays.length; index++) {\n                var dayOfWeek = weekDays[index];\n                cells.push(this.createTableHeaderCellElement(viewModel, dayOfWeek));\n            }\n            return this.htmlHelper.createTableHeader('calendar-header', cells);\n        };\n        Template.prototype.createTableHeaderCellElement = function (viewModel, dayOfWeek) {\n            var headerCell = this.htmlHelper.createTableHeaderCell('week-day');\n            if (dayOfWeek === TheDatepicker.DayOfWeek.Saturday || dayOfWeek === TheDatepicker.DayOfWeek.Sunday) {\n                this.htmlHelper.addClass(headerCell, 'week-day--weekend');\n            }\n            headerCell.innerText = this.options.translator.translateDayOfWeek(dayOfWeek);\n            return headerCell;\n        };\n        Template.prototype.createTableBodyElement = function (viewModel) {\n            this.daysElements = [];\n            this.daysButtonsElements = [];\n            this.daysContentsElements = [];\n            var rows = [];\n            for (var index = 0; index < 6; index++) {\n                rows.push(this.createTableRowElement(viewModel));\n            }\n            this.weeksElements = rows;\n            return this.htmlHelper.createTableBody('calendar-body', rows);\n        };\n        Template.prototype.updateWeeksElements = function (viewModel) {\n            var weeks = viewModel.getWeeks();\n            for (var weekIndex = 0; weekIndex < this.weeksElements.length; weekIndex++) {\n                var weekElement = this.weeksElements[weekIndex];\n                var week = weeks.length > weekIndex ? weeks[weekIndex] : null;\n                weekElement.style.display = week !== null ? '' : 'none';\n                if (week !== null) {\n                    for (var dayIndex = 0; dayIndex < this.daysElements[weekIndex].length; dayIndex++) {\n                        this.updateDayElement(viewModel, this.daysElements[weekIndex][dayIndex], this.daysButtonsElements[weekIndex][dayIndex], this.daysContentsElements[weekIndex][dayIndex], week[dayIndex]);\n                    }\n                }\n            }\n        };\n        Template.prototype.createTableRowElement = function (viewModel) {\n            var cells = [];\n            var cellsButtons = [];\n            var cellsContents = [];\n            for (var index = 0; index < 7; index++) {\n                var cell = this.htmlHelper.createTableCell();\n                var cellButton = this.createTableCellButtonElement(viewModel);\n                var cellContent = this.createTableCellContentElement(viewModel);\n                cells.push(cell);\n                cellsButtons.push(cellButton);\n                cellsContents.push(cellContent);\n                cell.appendChild(cellButton);\n                cellButton.appendChild(cellContent);\n            }\n            this.daysElements.push(cells);\n            this.daysButtonsElements.push(cellsButtons);\n            this.daysContentsElements.push(cellsContents);\n            return this.htmlHelper.createTableRow('week', cells);\n        };\n        Template.prototype.updateDayElement = function (viewModel, dayElement, dayButtonElement, dayContentElement, day) {\n            dayButtonElement.day = day;\n            dayElement.setAttribute('data-date', day.getFormatted());\n            dayElement.className = '';\n            this.htmlHelper.addClass(dayElement, 'cell');\n            this.options.updateCellStructure(dayContentElement, day);\n            if (!day.isVisible) {\n                dayButtonElement.removeAttribute('href');\n                dayButtonElement.style.visibility = 'hidden';\n                return;\n            }\n            this.htmlHelper.addClass(dayElement, 'day');\n            if (day.isToday) {\n                this.htmlHelper.addClass(dayElement, 'day--today');\n            }\n            if (day.isPast) {\n                this.htmlHelper.addClass(dayElement, 'day--past');\n            }\n            if (day.isWeekend) {\n                this.htmlHelper.addClass(dayElement, 'day--weekend');\n            }\n            if (!day.isAvailable) {\n                this.htmlHelper.addClass(dayElement, 'day--unavailable');\n            }\n            if (!day.isInCurrentMonth) {\n                this.htmlHelper.addClass(dayElement, 'day--outside');\n            }\n            if (day.isHighlighted) {\n                this.htmlHelper.addClass(dayElement, 'day--highlighted');\n            }\n            if (day.isSelected) {\n                this.htmlHelper.addClass(dayElement, 'day--selected');\n            }\n            var customClasses = this.options.getCellClasses(day);\n            for (var index = 0; index < customClasses.length; index++) {\n                dayElement.className += ' ' + customClasses[index];\n            }\n            dayButtonElement.style.visibility = 'visible';\n            if (day.isAvailable) {\n                dayButtonElement.href = '#';\n            }\n            else {\n                dayButtonElement.removeAttribute('href');\n            }\n            if (day.isFocused) {\n                dayButtonElement.focus();\n            }\n        };\n        Template.prototype.createTableCellButtonElement = function (viewModel) {\n            var _this = this;\n            var cellButton = this.htmlHelper.createAnchor(function (event) {\n                var previous = viewModel.selectedDate;\n                var isSelected = viewModel.selectDay(event, cellButton.day, false, true, true);\n                if (_this.options.isHiddenOnSelect() && (isSelected || (previous !== null && cellButton.day.isEqualToDate(previous)))) {\n                    viewModel.close(event);\n                }\n            });\n            cellButton.onfocus = function (event) {\n                viewModel.highlightDay(event || window.event, cellButton.day);\n            };\n            cellButton.onmouseenter = function () {\n                viewModel.cancelHighlight();\n            };\n            cellButton.onmouseleave = function () {\n                viewModel.cancelHighlight();\n            };\n            return cellButton;\n        };\n        Template.prototype.createTableCellContentElement = function (viewModel) {\n            var cellContent = this.options.getCellStructure();\n            this.htmlHelper.addClass(cellContent, 'day-content');\n            return cellContent;\n        };\n        return Template;\n    }());\n    TheDatepicker.Template = Template;\n})(TheDatepicker || (TheDatepicker = {}));\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TheDatepicker);\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/tile.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/tile.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tiles; });\n/* harmony import */ var masonry_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! masonry-layout */ \"./node_modules/masonry-layout/masonry.js\");\n/* harmony import */ var masonry_layout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(masonry_layout__WEBPACK_IMPORTED_MODULE_0__);\n\n\nclass Tiles {\n    constructor() {\n        this.itemSelector = '.c-tile__item';\n        this.tileSizer = '.c-tile__sizer';\n        this.containerSelector = '.c-tile__container';\n    }\n\n    initTiles () {\n        if (document.querySelectorAll('.c-tile__container').length > 0) {\n            const msnry = new masonry_layout__WEBPACK_IMPORTED_MODULE_0___default.a( this.containerSelector, {\n                columnWidth: this.tileSizer,\n                itemSelector: this.itemSelector\n            });\n        }\n    }\n}\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/tile.js?");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ToggleClasses; });\nclass ToggleClasses {\n    constructor() {\n        this.TRIGGER = 'js-toggle-trigger';\n        this.ITEM = 'js-toggle-item';\n        this.CLASS = 'js-toggle-class';\n        this.GROUP = 'js-toggle-group';\n        this.PRESSED = 'aria-pressed';\n    }\n\n    togglePressedTrigger (pressedTriggerId, groupId, pressedTrigger) {\n        let query = `[${this.ITEM}=\"${pressedTriggerId}\"]`;\n        let item = document.querySelector(query);\n        let toggleClass = item.getAttribute(this.CLASS);\n        let ariaPressed = pressedTrigger.getAttribute(this.PRESSED);\n\n        item.classList.toggle(toggleClass);\n\n        if(ariaPressed) this.toggleAriaPressed(ariaPressed, pressedTrigger);\n\n        if(groupId) this.toggleIdleGroupMembers(groupId, pressedTriggerId, toggleClass);\n    }\n\n    toggleIdleGroupMembers (groupId, pressedTriggerId, toggleClass) {\n        let query = `[${this.GROUP}=\"${groupId}\"][${this.TRIGGER}]:not([${this.TRIGGER}=\"${pressedTriggerId}\"])`\n        let idleTriggers = document.querySelectorAll(query);\n\n        idleTriggers.forEach((idleTrigger=>{\n            this.removeClassFromTriggeredItem(idleTrigger, toggleClass);\n\n            let ariaPressed = idleTrigger.getAttribute(this.PRESSED);\n\n            if(ariaPressed) this.toggleAriaPressed(ariaPressed, idleTrigger, true);\n        }));\n    }\n\n    removeClassFromTriggeredItem (idleTrigger, toggleClass) {\n        let id = idleTrigger.getAttribute(this.TRIGGER);\n        let triggeredItem = document.querySelector(`[${this.ITEM}=\"${id}\"]`);\n\n        triggeredItem.classList.remove(toggleClass);\n    }\n\n    toggleAriaPressed (ariaPressed, element, idle = false) {\n        if(ariaPressed === 'false' && !idle){\n            element.setAttribute(this.PRESSED, 'true');\n        }else {\n            element.setAttribute(this.PRESSED, 'false');\n        }\n    }\n\n    applyToggle () {\n        const triggers = document.querySelectorAll(`[${this.TRIGGER}]`);\n\n        triggers.forEach( (trigger)=>{\n            trigger.addEventListener('click', (event) => {\n                let triggerId = trigger.getAttribute(this.TRIGGER);\n                let groupId = trigger.getAttribute(this.GROUP);\n                \n                this.togglePressedTrigger(triggerId, groupId, trigger);\n            });\n        })\n    }\n}\n\n//# sourceURL=webpack:///./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js?");

/***/ }),

/***/ "./node_modules/desandro-matches-selector/matches-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/desandro-matches-selector/matches-selector.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/desandro-matches-selector/matches-selector.js?");

/***/ }),

/***/ "./node_modules/ev-emitter/ev-emitter.js":
/*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/ev-emitter/ev-emitter.js?");

/***/ }),

/***/ "./node_modules/fizzy-ui-utils/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/fizzy-ui-utils/utils.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! desandro-matches-selector/matches-selector */ \"./node_modules/desandro-matches-selector/matches-selector.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/fizzy-ui-utils/utils.js?");

/***/ }),

/***/ "./node_modules/get-size/get-size.js":
/*!*******************************************!*\
  !*** ./node_modules/get-size/get-size.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n\n\n//# sourceURL=webpack:///./node_modules/get-size/get-size.js?");

/***/ }),

/***/ "./node_modules/masonry-layout/masonry.js":
/*!************************************************!*\
  !*** ./node_modules/masonry-layout/masonry.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Masonry v4.2.2\n * Cascading grid layout library\n * https://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(/*! outlayer/outlayer */ \"./node_modules/outlayer/outlayer.js\"),\n        __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\")\n      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  var proto = Masonry.prototype;\n\n  proto._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n\n  proto.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  proto.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  proto._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ?\n      '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[ colPosMethod ]( colSpan, item );\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for ( var i = colPosition.col; i < setMax; i++ ) {\n      this.colYs[i] = setHeight;\n    }\n\n    return position;\n  };\n\n  proto._getTopColPosition = function( colSpan ) {\n    var colGroup = this._getTopColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n\n    return {\n      col: colGroup.indexOf( minimumY ),\n      y: minimumY,\n    };\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  proto._getTopColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      colGroup[i] = this._getColGroupY( i, colSpan );\n    }\n    return colGroup;\n  };\n\n  proto._getColGroupY = function( col, colSpan ) {\n    if ( colSpan < 2 ) {\n      return this.colYs[ col ];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice( col, col + colSpan );\n    // and get the max value of the array\n    return Math.max.apply( Math, groupColYs );\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function( colSpan, item ) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n    return {\n      col: col,\n      y: this._getColGroupY( col, colSpan ),\n    };\n  };\n\n  proto._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  proto._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  proto._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  proto.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/masonry-layout/masonry.js?");

/***/ }),

/***/ "./node_modules/outlayer/item.js":
/*!***************************************!*\
  !*** ./node_modules/outlayer/item.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\"),\n        __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\")\n      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  var x = parseFloat( xValue );\n  var y = parseFloat( yValue );\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  if ( xValue.indexOf('%') != -1 ) {\n    x = ( x / 100 ) * layoutSize.width;\n  }\n  if ( yValue.indexOf('%') != -1 ) {\n    y = ( y / 100 ) * layoutSize.height;\n  }\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var didNotMove = x == this.position.x && y == this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseFloat( x );\n  this.position.y = parseFloat( y );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/outlayer/item.js?");

/***/ }),

/***/ "./node_modules/outlayer/outlayer.js":
/*!*******************************************!*\
  !*** ./node_modules/outlayer/outlayer.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\"),\n        __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\"),\n        __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\"),\n        __webpack_require__(/*! ./item */ \"./node_modules/outlayer/item.js\")\n      ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/outlayer/outlayer.js?");

/***/ }),

/***/ 0:

  !*** multi ./node_modules/@helsingborg-stad/styleguide/source/js/animate.js ./node_modules/@helsingborg-stad/styleguide/source/js/app.js ./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js ./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js ./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js ./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js ./node_modules/@helsingborg-stad/styleguide/source/js/equal.js ./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js ./node_modules/@helsingborg-stad/styleguide/source/js/fields.js ./node_modules/@helsingborg-stad/styleguide/source/js/filter.js ./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js ./node_modules/@helsingborg-stad/styleguide/source/js/image.js ./node_modules/@helsingborg-stad/styleguide/source/js/index.js ./node_modules/@helsingborg-stad/styleguide/source/js/initBuild.js ./node_modules/@helsingborg-stad/styleguide/source/js/menu.js ./node_modules/@helsingborg-stad/styleguide/source/js/modal.js ./node_modules/@helsingborg-stad/styleguide/source/js/notification.js ./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js ./node_modules/@helsingborg-stad/styleguide/source/js/polyfill.js ./node_modules/@helsingborg-stad/styleguide/source/js/ripple.js ./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js ./node_modules/@helsingborg-stad/styleguide/source/js/slider.js ./node_modules/@helsingborg-stad/styleguide/source/js/sort.js ./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js ./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js ./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js ./node_modules/@helsingborg-stad/styleguide/source/js/tile.js ./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/animate.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/animate.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/app.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/app.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/equal.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/equal.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/fields.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/fields.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/filter.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/filter.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/image.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/image.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/index.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/index.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/initBuild.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/initBuild.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/menu.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/menu.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/modal.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/modal.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/notification.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/notification.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/polyfill.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/polyfill.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/ripple.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/ripple.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/slider.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/slider.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/sort.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/sort.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js\");\n__webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/tile.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/tile.js\");\nmodule.exports = __webpack_require__(/*! ./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js */\"./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js\");\n\n\n//# sourceURL=webpack:///multi_./node_modules/@helsingborg-stad/styleguide/source/js/animate.js_./node_modules/@helsingborg-stad/styleguide/source/js/app.js_./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js_./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js_./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js_./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js_./node_modules/@helsingborg-stad/styleguide/source/js/equal.js_./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js_./node_modules/@helsingborg-stad/styleguide/source/js/fields.js_./node_modules/@helsingborg-stad/styleguide/source/js/filter.js_./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js_./node_modules/@helsingborg-stad/styleguide/source/js/image.js_./node_modules/@helsingborg-stad/styleguide/source/js/index.js_./node_modules/@helsingborg-stad/styleguide/source/js/initBuild.js_./node_modules/@helsingborg-stad/styleguide/source/js/menu.js_./node_modules/@helsingborg-stad/styleguide/source/js/modal.js_./node_modules/@helsingborg-stad/styleguide/source/js/notification.js_./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js_./node_modules/@helsingborg-stad/styleguide/source/js/polyfill.js_./node_modules/@helsingborg-stad/styleguide/source/js/ripple.js_./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js_./node_modules/@helsingborg-stad/styleguide/source/js/slider.js_./node_modules/@helsingborg-stad/styleguide/source/js/sort.js_./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js_./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js_./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js_./node_modules/@helsingborg-stad/styleguide/source/js/tile.js_./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js?");

/***/ })

/******/ });